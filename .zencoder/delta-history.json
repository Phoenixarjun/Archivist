{"snapshots":{"C:/Users/naresh.b/Downloads/Archivist/assetmanagement/src/main/java/com/example/assetmanagement/dto/UserDto.java":{"filePath":"C:/Users/naresh.b/Downloads/Archivist/assetmanagement/src/main/java/com/example/assetmanagement/dto/UserDto.java","baseContent":"package com.example.assetmanagement.dto;\n\npublic class UserDto {\n}\n","baseTimestamp":1759819482774,"deltas":[{"timestamp":1759829616263,"changes":[{"type":"INSERT","lineNumber":2,"content":"import com.example.assetmanagement.entity.UserRole;"},{"type":"INSERT","lineNumber":3,"content":"import lombok.Data;"},{"type":"INSERT","lineNumber":4,"content":""},{"type":"INSERT","lineNumber":5,"content":"@Data"},{"type":"INSERT","lineNumber":7,"content":"    private Long userId;"},{"type":"INSERT","lineNumber":8,"content":"    private String employeeId;"},{"type":"INSERT","lineNumber":9,"content":"    private String firstName;"},{"type":"INSERT","lineNumber":10,"content":"    private String lastName;"},{"type":"INSERT","lineNumber":11,"content":"    private UserRole role;"}]}]},"C:/Users/naresh.b/Downloads/Archivist/assetmanagement/src/main/java/com/example/assetmanagement/dto/AssetDto.java":{"filePath":"C:/Users/naresh.b/Downloads/Archivist/assetmanagement/src/main/java/com/example/assetmanagement/dto/AssetDto.java","baseContent":"package com.example.assetmanagement.dto;\n\npublic class AssetDto {\n}\n","baseTimestamp":1759819482774,"deltas":[{"timestamp":1759830916783,"changes":[{"type":"INSERT","lineNumber":2,"content":"import lombok.Data;"},{"type":"INSERT","lineNumber":3,"content":"import java.math.BigDecimal;"},{"type":"INSERT","lineNumber":4,"content":"import java.time.LocalDate;"},{"type":"INSERT","lineNumber":5,"content":""},{"type":"INSERT","lineNumber":6,"content":"@Data"},{"type":"INSERT","lineNumber":8,"content":"    private Long assetId;"},{"type":"INSERT","lineNumber":9,"content":"    private String name;"},{"type":"INSERT","lineNumber":10,"content":"    private String description;"},{"type":"INSERT","lineNumber":11,"content":"    private String category;"},{"type":"INSERT","lineNumber":12,"content":"    private LocalDate purchaseDate;"},{"type":"INSERT","lineNumber":13,"content":"    private BigDecimal purchasePrice;"},{"type":"INSERT","lineNumber":14,"content":"    private String status;"},{"type":"INSERT","lineNumber":15,"content":"    private Long assignedToUserId;"}]},{"timestamp":1759898456546,"changes":[{"type":"INSERT","lineNumber":2,"content":"import jakarta.validation.constraints.NotEmpty;"},{"type":"INSERT","lineNumber":3,"content":"import jakarta.validation.constraints.NotNull;"},{"type":"DELETE","lineNumber":3,"oldContent":"public class AssetDto {"},{"type":"INSERT","lineNumber":5,"content":""},{"type":"DELETE","lineNumber":5,"oldContent":"}"},{"type":"DELETE","lineNumber":8,"oldContent":""},{"type":"DELETE","lineNumber":9,"oldContent":"    private Long assignedToUserId;"},{"type":"DELETE","lineNumber":11,"oldContent":"    private String status;"},{"type":"DELETE","lineNumber":12,"oldContent":"    private BigDecimal purchasePrice;"},{"type":"INSERT","lineNumber":10,"content":"public class AssetDto {"},{"type":"DELETE","lineNumber":14,"oldContent":"    private LocalDate purchaseDate;"},{"type":"INSERT","lineNumber":12,"content":""},{"type":"INSERT","lineNumber":13,"content":"    @NotEmpty(message = \"Asset name cannot be empty\")"},{"type":"DELETE","lineNumber":16,"oldContent":"    private String category;"},{"type":"INSERT","lineNumber":15,"content":""},{"type":"INSERT","lineNumber":17,"content":""},{"type":"INSERT","lineNumber":18,"content":"    @NotEmpty(message = \"Category cannot be empty\")"},{"type":"INSERT","lineNumber":19,"content":"    private String category;"},{"type":"INSERT","lineNumber":20,"content":""},{"type":"INSERT","lineNumber":21,"content":"    private LocalDate purchaseDate;"},{"type":"INSERT","lineNumber":22,"content":""},{"type":"INSERT","lineNumber":23,"content":"    private BigDecimal purchasePrice;"},{"type":"INSERT","lineNumber":24,"content":""},{"type":"INSERT","lineNumber":25,"content":"    @NotEmpty(message = \"Status cannot be empty\")"},{"type":"INSERT","lineNumber":26,"content":"    private String status;"},{"type":"INSERT","lineNumber":27,"content":""},{"type":"INSERT","lineNumber":28,"content":"    private Long assignedToUserId;"},{"type":"INSERT","lineNumber":29,"content":"}"},{"type":"INSERT","lineNumber":30,"content":""}]},{"timestamp":1759898712661,"changes":[{"type":"DELETE","lineNumber":3,"oldContent":"import lombok.Data;"},{"type":"MODIFY","lineNumber":4,"content":"import lombok.Data;","oldContent":"import java.math.BigDecimal;"},{"type":"INSERT","lineNumber":6,"content":"import java.math.BigDecimal;"},{"type":"DELETE","lineNumber":9,"oldContent":"public class AssetDto {"},{"type":"DELETE","lineNumber":11,"oldContent":""},{"type":"DELETE","lineNumber":12,"oldContent":"    @NotEmpty(message = \"Asset name cannot be empty\")"},{"type":"INSERT","lineNumber":10,"content":"public class AssetDto {"},{"type":"INSERT","lineNumber":13,"content":"    @NotEmpty(message = \"Asset name cannot be empty\")"},{"type":"DELETE","lineNumber":18,"oldContent":"    @NotEmpty(message = \"Category cannot be empty\")"},{"type":"DELETE","lineNumber":20,"oldContent":"    private String category;"},{"type":"DELETE","lineNumber":21,"oldContent":"}"},{"type":"INSERT","lineNumber":18,"content":"    @NotNull(message = \"Category ID cannot be null\")"},{"type":"INSERT","lineNumber":19,"content":"    private Long categoryId; // Changed from String to Long"},{"type":"DELETE","lineNumber":23,"oldContent":"    private Long assignedToUserId;"},{"type":"INSERT","lineNumber":21,"content":"    private String categoryName; // Added for response convenience"},{"type":"INSERT","lineNumber":22,"content":""},{"type":"DELETE","lineNumber":26,"oldContent":""},{"type":"DELETE","lineNumber":27,"oldContent":"    private String status;"},{"type":"INSERT","lineNumber":26,"content":""},{"type":"INSERT","lineNumber":28,"content":"    private String status;"},{"type":"INSERT","lineNumber":30,"content":"    private Long assignedToUserId;"},{"type":"INSERT","lineNumber":31,"content":"}"},{"type":"INSERT","lineNumber":32,"content":""}]}]},"C:/Users/naresh.b/Downloads/Archivist/assetmanagement/src/main/java/com/example/assetmanagement/entity/User.java":{"filePath":"C:/Users/naresh.b/Downloads/Archivist/assetmanagement/src/main/java/com/example/assetmanagement/entity/User.java","baseContent":"package com.example.assetmanagement.entity;\n\n\n@\npublic class User {\n}\n","baseTimestamp":1759825012183,"deltas":[{"timestamp":1759825037618,"changes":[{"type":"MODIFY","lineNumber":3,"content":"import lombok.AllArgsConstructor;","oldContent":"@"},{"type":"INSERT","lineNumber":4,"content":"import lombok.NoArgsConstructor;"},{"type":"INSERT","lineNumber":5,"content":""},{"type":"INSERT","lineNumber":6,"content":"@AllArgsConstructor"},{"type":"INSERT","lineNumber":7,"content":"@NoArgsConstructor"},{"type":"INSERT","lineNumber":8,"content":""}]},{"timestamp":1759825533454,"changes":[{"type":"DELETE","lineNumber":5,"oldContent":"public class User {"},{"type":"DELETE","lineNumber":7,"oldContent":"}"},{"type":"MODIFY","lineNumber":9,"content":"public class User {","oldContent":""},{"type":"INSERT","lineNumber":10,"content":"    String u"},{"type":"INSERT","lineNumber":11,"content":"}"},{"type":"INSERT","lineNumber":12,"content":""}]},{"timestamp":1759825536416,"changes":[{"type":"DELETE","lineNumber":7,"oldContent":"public class User {"},{"type":"MODIFY","lineNumber":8,"content":"","oldContent":"    String u"},{"type":"INSERT","lineNumber":9,"content":"public class User {"},{"type":"INSERT","lineNumber":10,"content":"    String userName;"},{"type":"INSERT","lineNumber":11,"content":"    "},{"type":"DELETE","lineNumber":12,"oldContent":""}]},{"timestamp":1759826400507,"changes":[{"type":"INSERT","lineNumber":7,"content":"@NoArgsConstructor"},{"type":"DELETE","lineNumber":9,"oldContent":"@NoArgsConstructor"},{"type":"INSERT","lineNumber":11,"content":""},{"type":"DELETE","lineNumber":12,"oldContent":"    "}]},{"timestamp":1759826596881,"changes":[{"type":"MODIFY","lineNumber":0,"content":"package com.hexaware.archivist.entity;","oldContent":"package com.example.assetmanagement.entity;"},{"type":"MODIFY","lineNumber":2,"content":"import jakarta.persistence.*;","oldContent":""},{"type":"INSERT","lineNumber":4,"content":"import lombok.Getter;"},{"type":"INSERT","lineNumber":6,"content":"import lombok.Setter;"},{"type":"INSERT","lineNumber":7,"content":"import org.hibernate.annotations.CreationTimestamp;"},{"type":"INSERT","lineNumber":8,"content":"import org.springframework.security.core.GrantedAuthority;"},{"type":"INSERT","lineNumber":9,"content":"import org.springframework.security.core.authority.SimpleGrantedAuthority;"},{"type":"INSERT","lineNumber":10,"content":"import org.springframework.security.core.userdetails.UserDetails;"},{"type":"DELETE","lineNumber":6,"oldContent":"@AllArgsConstructor"},{"type":"INSERT","lineNumber":12,"content":"import java.time.LocalDateTime;"},{"type":"INSERT","lineNumber":13,"content":"import java.util.Collection;"},{"type":"INSERT","lineNumber":14,"content":"import java.util.List;"},{"type":"INSERT","lineNumber":15,"content":"import java.util.Set;"},{"type":"INSERT","lineNumber":16,"content":""},{"type":"INSERT","lineNumber":17,"content":"@Entity"},{"type":"INSERT","lineNumber":18,"content":"@Table(name = \"users\")"},{"type":"INSERT","lineNumber":19,"content":"@Getter"},{"type":"INSERT","lineNumber":20,"content":"@Setter"},{"type":"INSERT","lineNumber":22,"content":"@AllArgsConstructor"},{"type":"INSERT","lineNumber":23,"content":"public class User implements UserDetails {"},{"type":"DELETE","lineNumber":9,"oldContent":"public class User {"},{"type":"DELETE","lineNumber":10,"oldContent":"    String userName;"},{"type":"INSERT","lineNumber":25,"content":"    @Id"},{"type":"INSERT","lineNumber":26,"content":"    @GeneratedValue(strategy = GenerationType.IDENTITY)"},{"type":"INSERT","lineNumber":27,"content":"    @Column(name = \"user_id\")"},{"type":"INSERT","lineNumber":28,"content":"    private Long userId;"},{"type":"INSERT","lineNumber":30,"content":"    @Column(name = \"employee_id\", unique = true, nullable = false)"},{"type":"INSERT","lineNumber":31,"content":"    private String employeeId;"},{"type":"INSERT","lineNumber":32,"content":""},{"type":"INSERT","lineNumber":33,"content":"    @Column(name = \"first_name\", nullable = false)"},{"type":"INSERT","lineNumber":34,"content":"    private String firstName;"},{"type":"INSERT","lineNumber":35,"content":""},{"type":"INSERT","lineNumber":36,"content":"    @Column(name = \"last_name\", nullable = false)"},{"type":"INSERT","lineNumber":37,"content":"    private String lastName;"},{"type":"INSERT","lineNumber":38,"content":""},{"type":"INSERT","lineNumber":39,"content":"    @Column(unique = true, nullable = false)"},{"type":"INSERT","lineNumber":40,"content":"    private String email;"},{"type":"INSERT","lineNumber":41,"content":""},{"type":"INSERT","lineNumber":42,"content":"    @Column(nullable = false)"},{"type":"INSERT","lineNumber":43,"content":"    private String password; // This will store the hashed password"},{"type":"INSERT","lineNumber":44,"content":""},{"type":"INSERT","lineNumber":45,"content":"    @Enumerated(EnumType.STRING) // Stores the role as a string (\"ROLE_ADMIN\") instead of a number"},{"type":"INSERT","lineNumber":46,"content":"    @Column(nullable = false)"},{"type":"INSERT","lineNumber":47,"content":"    private UserRole role;"},{"type":"INSERT","lineNumber":48,"content":""},{"type":"INSERT","lineNumber":49,"content":"    @CreationTimestamp"},{"type":"INSERT","lineNumber":50,"content":"    @Column(name = \"created_at\", updatable = false)"},{"type":"INSERT","lineNumber":51,"content":"    private LocalDateTime createdAt;"},{"type":"INSERT","lineNumber":52,"content":""},{"type":"INSERT","lineNumber":53,"content":"    // Defines the one-to-many relationship: One User can have many Assets."},{"type":"INSERT","lineNumber":54,"content":"    // 'mappedBy' indicates that the 'Asset' entity owns the relationship (it has the foreign key)."},{"type":"INSERT","lineNumber":55,"content":"    // FetchType.LAZY improves performance by only loading assets when explicitly requested."},{"type":"INSERT","lineNumber":56,"content":"    @OneToMany(mappedBy = \"assignedTo\", cascade = CascadeType.ALL, fetch = FetchType.LAZY)"},{"type":"INSERT","lineNumber":57,"content":"    private Set<Asset> assets;"},{"type":"INSERT","lineNumber":58,"content":""},{"type":"INSERT","lineNumber":59,"content":""},{"type":"INSERT","lineNumber":60,"content":"    // --- UserDetails Methods (for Spring Security) ---"},{"type":"INSERT","lineNumber":61,"content":""},{"type":"INSERT","lineNumber":62,"content":"    @Override"},{"type":"INSERT","lineNumber":63,"content":"    public Collection<? extends GrantedAuthority> getAuthorities() {"},{"type":"INSERT","lineNumber":64,"content":"        // Returns a list of authorities/roles for the user."},{"type":"INSERT","lineNumber":65,"content":"        return List.of(new SimpleGrantedAuthority(role.name()));"},{"type":"INSERT","lineNumber":66,"content":"    }"},{"type":"INSERT","lineNumber":67,"content":""},{"type":"INSERT","lineNumber":68,"content":"    @Override"},{"type":"INSERT","lineNumber":69,"content":"    public String getUsername() {"},{"type":"INSERT","lineNumber":70,"content":"        // Spring Security will use the email as the unique identifier for login."},{"type":"INSERT","lineNumber":71,"content":"        return this.email;"},{"type":"INSERT","lineNumber":72,"content":"    }"},{"type":"INSERT","lineNumber":73,"content":""},{"type":"INSERT","lineNumber":74,"content":"    @Override"},{"type":"INSERT","lineNumber":75,"content":"    public boolean isAccountNonExpired() {"},{"type":"INSERT","lineNumber":76,"content":"        return true;"},{"type":"INSERT","lineNumber":77,"content":"    }"},{"type":"INSERT","lineNumber":78,"content":""},{"type":"INSERT","lineNumber":79,"content":"    @Override"},{"type":"INSERT","lineNumber":80,"content":"    public boolean isAccountNonLocked() {"},{"type":"INSERT","lineNumber":81,"content":"        return true;"},{"type":"INSERT","lineNumber":82,"content":"    }"},{"type":"INSERT","lineNumber":83,"content":""},{"type":"INSERT","lineNumber":84,"content":"    @Override"},{"type":"INSERT","lineNumber":85,"content":"    public boolean isCredentialsNonExpired() {"},{"type":"INSERT","lineNumber":86,"content":"        return true;"},{"type":"INSERT","lineNumber":87,"content":"    }"},{"type":"INSERT","lineNumber":88,"content":""},{"type":"INSERT","lineNumber":89,"content":"    @Override"},{"type":"INSERT","lineNumber":90,"content":"    public boolean isEnabled() {"},{"type":"INSERT","lineNumber":91,"content":"        return true;"},{"type":"INSERT","lineNumber":92,"content":"    }"},{"type":"INSERT","lineNumber":95,"content":"// You would also need a UserRole enum in a separate file:"},{"type":"INSERT","lineNumber":96,"content":"// public enum UserRole {"},{"type":"INSERT","lineNumber":97,"content":"//     ROLE_EMPLOYEE,"},{"type":"INSERT","lineNumber":98,"content":"//     ROLE_ADMIN"},{"type":"INSERT","lineNumber":99,"content":"// }"}]},{"timestamp":1759826600544,"changes":[{"type":"DELETE","lineNumber":6,"oldContent":""},{"type":"DELETE","lineNumber":9,"oldContent":"@NoArgsConstructor"},{"type":"DELETE","lineNumber":11,"oldContent":""},{"type":"DELETE","lineNumber":16,"oldContent":"}"},{"type":"DELETE","lineNumber":18,"oldContent":""},{"type":"DELETE","lineNumber":20,"oldContent":"// }"},{"type":"DELETE","lineNumber":22,"oldContent":"//     ROLE_ADMIN"},{"type":"DELETE","lineNumber":24,"oldContent":"//     ROLE_EMPLOYEE,"},{"type":"DELETE","lineNumber":26,"oldContent":"// public enum UserRole {"},{"type":"DELETE","lineNumber":28,"oldContent":"// You would also need a UserRole enum in a separate file:"},{"type":"DELETE","lineNumber":30,"oldContent":"    }"},{"type":"DELETE","lineNumber":32,"oldContent":"        return true;"},{"type":"DELETE","lineNumber":33,"oldContent":"    public boolean isEnabled() {"},{"type":"INSERT","lineNumber":21,"content":"@NoArgsConstructor"},{"type":"DELETE","lineNumber":35,"oldContent":"    @Override"},{"type":"DELETE","lineNumber":38,"oldContent":"    }"},{"type":"DELETE","lineNumber":40,"oldContent":"        return true;"},{"type":"DELETE","lineNumber":42,"oldContent":"    public boolean isCredentialsNonExpired() {"},{"type":"DELETE","lineNumber":44,"oldContent":"    @Override"},{"type":"DELETE","lineNumber":47,"oldContent":"    }"},{"type":"DELETE","lineNumber":49,"oldContent":"        return true;"},{"type":"DELETE","lineNumber":51,"oldContent":"    public boolean isAccountNonLocked() {"},{"type":"DELETE","lineNumber":53,"oldContent":"    @Override"},{"type":"DELETE","lineNumber":55,"oldContent":""},{"type":"DELETE","lineNumber":57,"oldContent":"    }"},{"type":"DELETE","lineNumber":59,"oldContent":"        return true;"},{"type":"DELETE","lineNumber":61,"oldContent":"    public boolean isAccountNonExpired() {"},{"type":"DELETE","lineNumber":63,"oldContent":"    @Override"},{"type":"DELETE","lineNumber":65,"oldContent":""},{"type":"DELETE","lineNumber":67,"oldContent":"    }"},{"type":"DELETE","lineNumber":69,"oldContent":"        return this.email;"},{"type":"DELETE","lineNumber":71,"oldContent":"        // Spring Security will use the email as the unique identifier for login."},{"type":"DELETE","lineNumber":73,"oldContent":"    public String getUsername() {"},{"type":"DELETE","lineNumber":75,"oldContent":"    @Override"},{"type":"DELETE","lineNumber":77,"oldContent":""},{"type":"DELETE","lineNumber":79,"oldContent":"    }"},{"type":"DELETE","lineNumber":81,"oldContent":"        return List.of(new SimpleGrantedAuthority(role.name()));"},{"type":"DELETE","lineNumber":83,"oldContent":"        // Returns a list of authorities/roles for the user."},{"type":"DELETE","lineNumber":85,"oldContent":"    public Collection<? extends GrantedAuthority> getAuthorities() {"},{"type":"DELETE","lineNumber":87,"oldContent":"    @Override"},{"type":"DELETE","lineNumber":89,"oldContent":""},{"type":"DELETE","lineNumber":91,"oldContent":"    // --- UserDetails Methods (for Spring Security) ---"},{"type":"DELETE","lineNumber":93,"oldContent":""},{"type":"DELETE","lineNumber":95,"oldContent":""},{"type":"DELETE","lineNumber":97,"oldContent":"    private Set<Asset> assets;"},{"type":"INSERT","lineNumber":57,"content":"    private Set<Asset> assets;"},{"type":"INSERT","lineNumber":58,"content":""},{"type":"INSERT","lineNumber":59,"content":""},{"type":"INSERT","lineNumber":60,"content":"    // --- UserDetails Methods (for Spring Security) ---"},{"type":"INSERT","lineNumber":61,"content":""},{"type":"INSERT","lineNumber":62,"content":"    @Override"},{"type":"INSERT","lineNumber":63,"content":"    public Collection<? extends GrantedAuthority> getAuthorities() {"},{"type":"INSERT","lineNumber":64,"content":"        // Returns a list of authorities/roles for the user."},{"type":"INSERT","lineNumber":65,"content":"        return List.of(new SimpleGrantedAuthority(role.name()));"},{"type":"INSERT","lineNumber":66,"content":"    }"},{"type":"INSERT","lineNumber":67,"content":""},{"type":"INSERT","lineNumber":68,"content":"    @Override"},{"type":"INSERT","lineNumber":69,"content":"    public String getUsername() {"},{"type":"INSERT","lineNumber":70,"content":"        // Spring Security will use the email as the unique identifier for login."},{"type":"INSERT","lineNumber":71,"content":"        return this.email;"},{"type":"INSERT","lineNumber":72,"content":"    }"},{"type":"INSERT","lineNumber":73,"content":""},{"type":"INSERT","lineNumber":74,"content":"    @Override"},{"type":"INSERT","lineNumber":75,"content":"    public boolean isAccountNonExpired() {"},{"type":"INSERT","lineNumber":76,"content":"        return true;"},{"type":"INSERT","lineNumber":77,"content":"    }"},{"type":"INSERT","lineNumber":78,"content":""},{"type":"INSERT","lineNumber":79,"content":"    @Override"},{"type":"INSERT","lineNumber":80,"content":"    public boolean isAccountNonLocked() {"},{"type":"INSERT","lineNumber":81,"content":"        return true;"},{"type":"INSERT","lineNumber":82,"content":"    }"},{"type":"INSERT","lineNumber":83,"content":""},{"type":"INSERT","lineNumber":84,"content":"    @Override"},{"type":"INSERT","lineNumber":85,"content":"    public boolean isCredentialsNonExpired() {"},{"type":"INSERT","lineNumber":86,"content":"        return true;"},{"type":"INSERT","lineNumber":87,"content":"    }"},{"type":"INSERT","lineNumber":88,"content":""},{"type":"INSERT","lineNumber":89,"content":"    @Override"},{"type":"INSERT","lineNumber":90,"content":"    public boolean isEnabled() {"},{"type":"INSERT","lineNumber":91,"content":"        return true;"},{"type":"INSERT","lineNumber":92,"content":"    }"},{"type":"INSERT","lineNumber":93,"content":"}"},{"type":"INSERT","lineNumber":94,"content":""},{"type":"INSERT","lineNumber":95,"content":""}]},{"timestamp":1759826606021,"changes":[{"type":"DELETE","lineNumber":15,"oldContent":"@NoArgsConstructor"},{"type":"INSERT","lineNumber":21,"content":"@NoArgsConstructor"},{"type":"DELETE","lineNumber":35,"oldContent":"    private Set<Asset> assets;"},{"type":"INSERT","lineNumber":36,"content":"    @Column(name = \"last_name\", nullable = false)"},{"type":"INSERT","lineNumber":37,"content":"    private String lastName;"},{"type":"INSERT","lineNumber":39,"content":"    @Column(unique = true, nullable = false)"},{"type":"INSERT","lineNumber":40,"content":"    private String email;"},{"type":"INSERT","lineNumber":42,"content":"    @Column(nullable = false)"},{"type":"INSERT","lineNumber":43,"content":"    private String password; "},{"type":"INSERT","lineNumber":44,"content":""},{"type":"INSERT","lineNumber":45,"content":"    @Enumerated(EnumType.STRING) // Stores the role as a string (\"ROLE_ADMIN\") instead of a number"},{"type":"INSERT","lineNumber":46,"content":"    @Column(nullable = false)"},{"type":"INSERT","lineNumber":47,"content":"    private UserRole role;"},{"type":"INSERT","lineNumber":48,"content":""},{"type":"INSERT","lineNumber":49,"content":"    @CreationTimestamp"},{"type":"INSERT","lineNumber":50,"content":"    @Column(name = \"created_at\", updatable = false)"},{"type":"INSERT","lineNumber":51,"content":"    private LocalDateTime createdAt;"},{"type":"INSERT","lineNumber":52,"content":""},{"type":"INSERT","lineNumber":53,"content":"    // Defines the one-to-many relationship: One User can have many Assets."},{"type":"INSERT","lineNumber":54,"content":"    // 'mappedBy' indicates that the 'Asset' entity owns the relationship (it has the foreign key)."},{"type":"INSERT","lineNumber":55,"content":"    // FetchType.LAZY improves performance by only loading assets when explicitly requested."},{"type":"INSERT","lineNumber":56,"content":"    @OneToMany(mappedBy = \"assignedTo\", cascade = CascadeType.ALL, fetch = FetchType.LAZY)"},{"type":"INSERT","lineNumber":57,"content":"    private Set<Asset> assets;"},{"type":"INSERT","lineNumber":58,"content":""},{"type":"INSERT","lineNumber":59,"content":""},{"type":"DELETE","lineNumber":40,"oldContent":"    @Column(name = \"last_name\", nullable = false)"},{"type":"DELETE","lineNumber":43,"oldContent":"    private String lastName;"},{"type":"DELETE","lineNumber":46,"oldContent":""},{"type":"DELETE","lineNumber":49,"oldContent":"    @Column(unique = true, nullable = false)"},{"type":"DELETE","lineNumber":52,"oldContent":"    private String email;"},{"type":"DELETE","lineNumber":55,"oldContent":""},{"type":"DELETE","lineNumber":58,"oldContent":"    @Column(nullable = false)"},{"type":"DELETE","lineNumber":61,"oldContent":"    private String password; // This will store the hashed password"},{"type":"DELETE","lineNumber":64,"oldContent":""},{"type":"DELETE","lineNumber":67,"oldContent":"    @Enumerated(EnumType.STRING) // Stores the role as a string (\"ROLE_ADMIN\") instead of a number"},{"type":"DELETE","lineNumber":70,"oldContent":"    @Column(nullable = false)"},{"type":"DELETE","lineNumber":73,"oldContent":"    private UserRole role;"},{"type":"DELETE","lineNumber":76,"oldContent":""},{"type":"DELETE","lineNumber":79,"oldContent":"    @CreationTimestamp"},{"type":"DELETE","lineNumber":82,"oldContent":"    @Column(name = \"created_at\", updatable = false)"},{"type":"DELETE","lineNumber":85,"oldContent":"    private LocalDateTime createdAt;"},{"type":"DELETE","lineNumber":88,"oldContent":""},{"type":"DELETE","lineNumber":91,"oldContent":"    // Defines the one-to-many relationship: One User can have many Assets."},{"type":"DELETE","lineNumber":93,"oldContent":"    // 'mappedBy' indicates that the 'Asset' entity owns the relationship (it has the foreign key)."},{"type":"DELETE","lineNumber":94,"oldContent":"    // FetchType.LAZY improves performance by only loading assets when explicitly requested."},{"type":"DELETE","lineNumber":95,"oldContent":"    @OneToMany(mappedBy = \"assignedTo\", cascade = CascadeType.ALL, fetch = FetchType.LAZY)"}]},{"timestamp":1759826609459,"changes":[{"type":"MODIFY","lineNumber":21,"content":"@NoArgsConstructor","oldContent":"@NoArgsConstructor"},{"type":"MODIFY","lineNumber":36,"content":"    @Column(name = \"last_name\", nullable = false)","oldContent":"    @Column(name = \"last_name\", nullable = false)"},{"type":"DELETE","lineNumber":39,"oldContent":""},{"type":"DELETE","lineNumber":41,"oldContent":"    // --- UserDetails Methods (for Spring Security) ---"},{"type":"DELETE","lineNumber":45,"oldContent":"    @Override"},{"type":"DELETE","lineNumber":48,"oldContent":"    public Collection<? extends GrantedAuthority> getAuthorities() {"},{"type":"DELETE","lineNumber":49,"oldContent":"    @Enumerated(EnumType.STRING) // Stores the role as a string (\"ROLE_ADMIN\") instead of a number"},{"type":"DELETE","lineNumber":50,"oldContent":"        // Returns a list of authorities/roles for the user."},{"type":"INSERT","lineNumber":45,"content":"    @Enumerated(EnumType.STRING) "},{"type":"DELETE","lineNumber":53,"oldContent":"        return List.of(new SimpleGrantedAuthority(role.name()));"},{"type":"DELETE","lineNumber":55,"oldContent":"    }"},{"type":"DELETE","lineNumber":58,"oldContent":""},{"type":"DELETE","lineNumber":60,"oldContent":"    @Override"},{"type":"DELETE","lineNumber":63,"oldContent":"    public String getUsername() {"},{"type":"DELETE","lineNumber":65,"oldContent":"        // Spring Security will use the email as the unique identifier for login."},{"type":"DELETE","lineNumber":68,"oldContent":"        return this.email;"},{"type":"DELETE","lineNumber":70,"oldContent":"    }"},{"type":"INSERT","lineNumber":60,"content":"    // --- UserDetails Methods (for Spring Security) ---"},{"type":"INSERT","lineNumber":63,"content":"    public Collection<? extends GrantedAuthority> getAuthorities() {"},{"type":"INSERT","lineNumber":64,"content":"        // Returns a list of authorities/roles for the user."},{"type":"INSERT","lineNumber":65,"content":"        return List.of(new SimpleGrantedAuthority(role.name()));"},{"type":"INSERT","lineNumber":66,"content":"    }"},{"type":"INSERT","lineNumber":67,"content":""},{"type":"INSERT","lineNumber":68,"content":"    @Override"},{"type":"INSERT","lineNumber":69,"content":"    public String getUsername() {"},{"type":"INSERT","lineNumber":70,"content":"        // Spring Security will use the email as the unique identifier for login."},{"type":"INSERT","lineNumber":71,"content":"        return this.email;"},{"type":"INSERT","lineNumber":72,"content":"    }"},{"type":"INSERT","lineNumber":73,"content":""},{"type":"INSERT","lineNumber":74,"content":"    @Override"}]},{"timestamp":1759826613647,"changes":[{"type":"INSERT","lineNumber":2,"content":"import com.example.assetmanagement.entity.UserRole;"},{"type":"INSERT","lineNumber":21,"content":"@Setter"},{"type":"DELETE","lineNumber":21,"oldContent":"@NoArgsConstructor"},{"type":"INSERT","lineNumber":36,"content":""},{"type":"DELETE","lineNumber":36,"oldContent":"    @Column(name = \"last_name\", nullable = false)"},{"type":"DELETE","lineNumber":43,"oldContent":"    @Enumerated(EnumType.STRING) "},{"type":"INSERT","lineNumber":46,"content":"    @Enumerated(EnumType.STRING) "},{"type":"DELETE","lineNumber":52,"oldContent":"    // --- UserDetails Methods (for Spring Security) ---"},{"type":"INSERT","lineNumber":55,"content":"    // 'mappedBy' indicates that the 'Asset' entity owns the relationship (it has the foreign key)."},{"type":"INSERT","lineNumber":56,"content":"    // FetchType.LAZY improves performance by only loading assets when explicitly requested."},{"type":"INSERT","lineNumber":57,"content":"    @OneToMany(mappedBy = \"assignedTo\", cascade = CascadeType.ALL, fetch = FetchType.LAZY)"},{"type":"INSERT","lineNumber":58,"content":"    private Set<Asset> assets;"},{"type":"INSERT","lineNumber":59,"content":""},{"type":"INSERT","lineNumber":60,"content":""},{"type":"INSERT","lineNumber":61,"content":"    // --- UserDetails Methods (for Spring Security) ---"},{"type":"INSERT","lineNumber":62,"content":""},{"type":"INSERT","lineNumber":63,"content":"    @Override"},{"type":"DELETE","lineNumber":57,"oldContent":"    // 'mappedBy' indicates that the 'Asset' entity owns the relationship (it has the foreign key)."},{"type":"DELETE","lineNumber":60,"oldContent":"    // FetchType.LAZY improves performance by only loading assets when explicitly requested."},{"type":"DELETE","lineNumber":62,"oldContent":"    @OneToMany(mappedBy = \"assignedTo\", cascade = CascadeType.ALL, fetch = FetchType.LAZY)"},{"type":"DELETE","lineNumber":65,"oldContent":"    private Set<Asset> assets;"},{"type":"DELETE","lineNumber":68,"oldContent":""},{"type":"DELETE","lineNumber":71,"oldContent":""},{"type":"DELETE","lineNumber":72,"oldContent":""},{"type":"DELETE","lineNumber":74,"oldContent":"    @Override"}]},{"timestamp":1759826618287,"changes":[{"type":"DELETE","lineNumber":0,"oldContent":"package com.hexaware.archivist.entity;"},{"type":"MODIFY","lineNumber":21,"content":"@NoArgsConstructor","oldContent":"@NoArgsConstructor"},{"type":"MODIFY","lineNumber":36,"content":"    @Column(name = \"last_name\", nullable = false)","oldContent":"    @Column(name = \"last_name\", nullable = false)"},{"type":"DELETE","lineNumber":56,"oldContent":"    public Collection<? extends GrantedAuthority> getAuthorities() {"},{"type":"DELETE","lineNumber":58,"oldContent":"        // Returns a list of authorities/roles for the user."},{"type":"DELETE","lineNumber":61,"oldContent":"        return List.of(new SimpleGrantedAuthority(role.name()));"},{"type":"DELETE","lineNumber":63,"oldContent":"    }"},{"type":"INSERT","lineNumber":62,"content":"    @Override"},{"type":"INSERT","lineNumber":63,"content":"    public Collection<? extends GrantedAuthority> getAuthorities() {"},{"type":"INSERT","lineNumber":64,"content":"        // Returns a list of authorities/roles for the user."},{"type":"INSERT","lineNumber":65,"content":"        return List.of(new SimpleGrantedAuthority(role.name()));"},{"type":"INSERT","lineNumber":66,"content":"    }"},{"type":"DELETE","lineNumber":69,"oldContent":"    @Override"}]},{"timestamp":1759826623383,"changes":[{"type":"INSERT","lineNumber":0,"content":"package com.example.assetmanagement.entity;"},{"type":"DELETE","lineNumber":20,"oldContent":"@NoArgsConstructor"},{"type":"INSERT","lineNumber":22,"content":"@NoArgsConstructor"},{"type":"DELETE","lineNumber":35,"oldContent":"    @Column(name = \"last_name\", nullable = false)"},{"type":"INSERT","lineNumber":37,"content":"    @Column(name = \"last_name\", nullable = false)"},{"type":"DELETE","lineNumber":58,"oldContent":"    @Override"},{"type":"INSERT","lineNumber":60,"content":""},{"type":"INSERT","lineNumber":61,"content":"    // --- UserDetails Methods (for Spring Security) ---"},{"type":"INSERT","lineNumber":62,"content":""},{"type":"INSERT","lineNumber":63,"content":"    @Override"},{"type":"DELETE","lineNumber":62,"oldContent":""},{"type":"DELETE","lineNumber":64,"oldContent":"    // --- UserDetails Methods (for Spring Security) ---"},{"type":"DELETE","lineNumber":67,"oldContent":""}]},{"timestamp":1759826659488,"changes":[{"type":"MODIFY","lineNumber":44,"content":"    private String password;","oldContent":"    private String password; "},{"type":"MODIFY","lineNumber":46,"content":"    @Enumerated(EnumType.STRING)","oldContent":"    @Enumerated(EnumType.STRING) "},{"type":"DELETE","lineNumber":60,"oldContent":""},{"type":"DELETE","lineNumber":61,"oldContent":"    public Collection<? extends GrantedAuthority> getAuthorities() {"},{"type":"DELETE","lineNumber":62,"oldContent":"    // --- UserDetails Methods (for Spring Security) ---"},{"type":"DELETE","lineNumber":63,"oldContent":"        // Returns a list of authorities/roles for the user."},{"type":"DELETE","lineNumber":64,"oldContent":""},{"type":"DELETE","lineNumber":65,"oldContent":"    @Override"},{"type":"DELETE","lineNumber":66,"oldContent":"        return List.of(new SimpleGrantedAuthority(role.name()));"},{"type":"DELETE","lineNumber":67,"oldContent":"    }"},{"type":"DELETE","lineNumber":68,"oldContent":""},{"type":"DELETE","lineNumber":69,"oldContent":"    @Override"},{"type":"DELETE","lineNumber":70,"oldContent":"    public String getUsername() {"},{"type":"DELETE","lineNumber":71,"oldContent":"        // Spring Security will use the email as the unique identifier for login."},{"type":"DELETE","lineNumber":72,"oldContent":"        return this.email;"},{"type":"DELETE","lineNumber":73,"oldContent":"    }"},{"type":"DELETE","lineNumber":74,"oldContent":""},{"type":"DELETE","lineNumber":75,"oldContent":"    @Override"},{"type":"DELETE","lineNumber":76,"oldContent":"    public boolean isAccountNonExpired() {"},{"type":"DELETE","lineNumber":77,"oldContent":"        return true;"},{"type":"DELETE","lineNumber":78,"oldContent":"    }"},{"type":"DELETE","lineNumber":79,"oldContent":""},{"type":"DELETE","lineNumber":80,"oldContent":"    @Override"},{"type":"DELETE","lineNumber":81,"oldContent":"    public boolean isAccountNonLocked() {"},{"type":"DELETE","lineNumber":82,"oldContent":"        return true;"},{"type":"DELETE","lineNumber":83,"oldContent":"    }"},{"type":"DELETE","lineNumber":84,"oldContent":""},{"type":"DELETE","lineNumber":85,"oldContent":"    @Override"},{"type":"DELETE","lineNumber":86,"oldContent":"    public boolean isCredentialsNonExpired() {"},{"type":"DELETE","lineNumber":87,"oldContent":"        return true;"},{"type":"DELETE","lineNumber":88,"oldContent":"    }"},{"type":"DELETE","lineNumber":89,"oldContent":""},{"type":"DELETE","lineNumber":90,"oldContent":"    @Override"},{"type":"DELETE","lineNumber":91,"oldContent":"    public boolean isEnabled() {"},{"type":"DELETE","lineNumber":92,"oldContent":"        return true;"},{"type":"DELETE","lineNumber":93,"oldContent":"    }"},{"type":"DELETE","lineNumber":95,"oldContent":""},{"type":"DELETE","lineNumber":96,"oldContent":""}]},{"timestamp":1759826675088,"changes":[{"type":"INSERT","lineNumber":60,"content":"    @Override"},{"type":"INSERT","lineNumber":61,"content":"    public Collection<? extends GrantedAuthority> getAuthorities() {"},{"type":"INSERT","lineNumber":62,"content":"        return List.of();"},{"type":"INSERT","lineNumber":63,"content":"    }"},{"type":"INSERT","lineNumber":64,"content":""},{"type":"INSERT","lineNumber":65,"content":"    @Override"},{"type":"INSERT","lineNumber":66,"content":"    public String getUsername() {"},{"type":"INSERT","lineNumber":67,"content":"        return \"\";"},{"type":"INSERT","lineNumber":68,"content":"    }"},{"type":"INSERT","lineNumber":69,"content":""},{"type":"INSERT","lineNumber":70,"content":"    @Override"},{"type":"INSERT","lineNumber":71,"content":"    public boolean isAccountNonExpired() {"},{"type":"INSERT","lineNumber":72,"content":"        return UserDetails.super.isAccountNonExpired();"},{"type":"INSERT","lineNumber":73,"content":"    }"},{"type":"INSERT","lineNumber":74,"content":""},{"type":"INSERT","lineNumber":75,"content":"    @Override"},{"type":"INSERT","lineNumber":76,"content":"    public boolean isAccountNonLocked() {"},{"type":"INSERT","lineNumber":77,"content":"        return UserDetails.super.isAccountNonLocked();"},{"type":"INSERT","lineNumber":78,"content":"    }"},{"type":"INSERT","lineNumber":79,"content":""},{"type":"INSERT","lineNumber":80,"content":"    @Override"},{"type":"INSERT","lineNumber":81,"content":"    public boolean isCredentialsNonExpired() {"},{"type":"INSERT","lineNumber":82,"content":"        return UserDetails.super.isCredentialsNonExpired();"},{"type":"INSERT","lineNumber":83,"content":"    }"},{"type":"INSERT","lineNumber":84,"content":""},{"type":"INSERT","lineNumber":85,"content":"    @Override"},{"type":"INSERT","lineNumber":86,"content":"    public boolean isEnabled() {"},{"type":"INSERT","lineNumber":87,"content":"        return UserDetails.super.isEnabled();"},{"type":"INSERT","lineNumber":88,"content":"    }"}]},{"timestamp":1759826702262,"changes":[{"type":"DELETE","lineNumber":54,"oldContent":"    // Defines the one-to-many relationship: One User can have many Assets."},{"type":"DELETE","lineNumber":55,"oldContent":"    // 'mappedBy' indicates that the 'Asset' entity owns the relationship (it has the foreign key)."},{"type":"DELETE","lineNumber":56,"oldContent":"    // FetchType.LAZY improves performance by only loading assets when explicitly requested."},{"type":"DELETE","lineNumber":61,"oldContent":"}"},{"type":"DELETE","lineNumber":63,"oldContent":"    }"},{"type":"DELETE","lineNumber":65,"oldContent":"        return UserDetails.super.isEnabled();"},{"type":"DELETE","lineNumber":67,"oldContent":"    public boolean isEnabled() {"},{"type":"DELETE","lineNumber":70,"oldContent":"    @Override"},{"type":"DELETE","lineNumber":71,"oldContent":""},{"type":"DELETE","lineNumber":73,"oldContent":"    }"},{"type":"DELETE","lineNumber":75,"oldContent":"        return UserDetails.super.isCredentialsNonExpired();"},{"type":"DELETE","lineNumber":77,"oldContent":"    public boolean isCredentialsNonExpired() {"},{"type":"DELETE","lineNumber":80,"oldContent":"    @Override"},{"type":"DELETE","lineNumber":81,"oldContent":""},{"type":"DELETE","lineNumber":83,"oldContent":"    }"},{"type":"DELETE","lineNumber":85,"oldContent":"        return UserDetails.super.isAccountNonLocked();"},{"type":"INSERT","lineNumber":71,"content":""},{"type":"INSERT","lineNumber":72,"content":"    @Override"},{"type":"INSERT","lineNumber":74,"content":"        return UserDetails.super.isAccountNonLocked();"},{"type":"INSERT","lineNumber":75,"content":"    }"},{"type":"INSERT","lineNumber":78,"content":"    public boolean isCredentialsNonExpired() {"},{"type":"INSERT","lineNumber":79,"content":"        return UserDetails.super.isCredentialsNonExpired();"},{"type":"INSERT","lineNumber":80,"content":"    }"},{"type":"INSERT","lineNumber":81,"content":""},{"type":"INSERT","lineNumber":82,"content":"    @Override"},{"type":"INSERT","lineNumber":83,"content":"    public boolean isEnabled() {"},{"type":"INSERT","lineNumber":84,"content":"        return UserDetails.super.isEnabled();"},{"type":"INSERT","lineNumber":85,"content":"    }"},{"type":"INSERT","lineNumber":86,"content":"}"}]},{"timestamp":1759826710072,"changes":[{"type":"INSERT","lineNumber":54,"content":"    "},{"type":"INSERT","lineNumber":55,"content":"    "},{"type":"DELETE","lineNumber":63,"oldContent":""},{"type":"DELETE","lineNumber":64,"oldContent":"    @Override"},{"type":"DELETE","lineNumber":66,"oldContent":"        return UserDetails.super.isAccountNonLocked();"},{"type":"INSERT","lineNumber":68,"content":""},{"type":"INSERT","lineNumber":69,"content":"    @Override"},{"type":"INSERT","lineNumber":70,"content":"    public boolean isAccountNonExpired() {"},{"type":"INSERT","lineNumber":71,"content":"        return UserDetails.super.isAccountNonExpired();"},{"type":"DELETE","lineNumber":70,"oldContent":"    public boolean isCredentialsNonExpired() {"},{"type":"DELETE","lineNumber":72,"oldContent":"        return UserDetails.super.isCredentialsNonExpired();"},{"type":"INSERT","lineNumber":75,"content":"    public boolean isAccountNonLocked() {"},{"type":"INSERT","lineNumber":76,"content":"        return UserDetails.super.isAccountNonLocked();"},{"type":"DELETE","lineNumber":77,"oldContent":"    public boolean isAccountNonExpired() {"},{"type":"INSERT","lineNumber":80,"content":"    public boolean isCredentialsNonExpired() {"},{"type":"INSERT","lineNumber":81,"content":"        return UserDetails.super.isCredentialsNonExpired();"},{"type":"INSERT","lineNumber":82,"content":"    }"},{"type":"INSERT","lineNumber":83,"content":""},{"type":"INSERT","lineNumber":84,"content":"    @Override"},{"type":"DELETE","lineNumber":80,"oldContent":"        return UserDetails.super.isAccountNonExpired();"},{"type":"DELETE","lineNumber":83,"oldContent":"    }"},{"type":"DELETE","lineNumber":84,"oldContent":"    public boolean isAccountNonLocked() {"},{"type":"DELETE","lineNumber":85,"oldContent":""},{"type":"DELETE","lineNumber":86,"oldContent":"    @Override"}]},{"timestamp":1759826807183,"changes":[{"type":"MODIFY","lineNumber":54,"content":"","oldContent":"    "},{"type":"INSERT","lineNumber":55,"content":""},{"type":"DELETE","lineNumber":56,"oldContent":"    "},{"type":"MODIFY","lineNumber":68,"content":"","oldContent":""},{"type":"DELETE","lineNumber":70,"oldContent":"    }"},{"type":"INSERT","lineNumber":72,"content":"    }"},{"type":"DELETE","lineNumber":75,"oldContent":"    }"},{"type":"MODIFY","lineNumber":77,"content":"    }","oldContent":""},{"type":"INSERT","lineNumber":78,"content":""},{"type":"DELETE","lineNumber":80,"oldContent":"    public boolean isEnabled() {"},{"type":"DELETE","lineNumber":81,"oldContent":"        return UserDetails.super.isEnabled();"},{"type":"DELETE","lineNumber":85,"oldContent":"    }"},{"type":"DELETE","lineNumber":86,"oldContent":"}"},{"type":"INSERT","lineNumber":85,"content":"    public boolean isEnabled() {"},{"type":"INSERT","lineNumber":86,"content":"        return UserDetails.super.isEnabled();"},{"type":"INSERT","lineNumber":87,"content":"    }"},{"type":"INSERT","lineNumber":88,"content":"}"}]},{"timestamp":1759827161636,"changes":[{"type":"MODIFY","lineNumber":61,"content":"        return List.of(new SimpleGrantedAuthority(role.name()));","oldContent":"        return List.of();"},{"type":"MODIFY","lineNumber":66,"content":"        return email;","oldContent":"        return \"\";"},{"type":"INSERT","lineNumber":67,"content":"    }"},{"type":"DELETE","lineNumber":68,"oldContent":""},{"type":"INSERT","lineNumber":71,"content":"        return true;"},{"type":"DELETE","lineNumber":72,"oldContent":"        return UserDetails.super.isAccountNonExpired();"},{"type":"INSERT","lineNumber":76,"content":"        return true;"},{"type":"DELETE","lineNumber":78,"oldContent":"        return UserDetails.super.isAccountNonLocked();"},{"type":"MODIFY","lineNumber":81,"content":"        return true;","oldContent":"        return UserDetails.super.isCredentialsNonExpired();"},{"type":"INSERT","lineNumber":83,"content":""},{"type":"INSERT","lineNumber":84,"content":"    @Override"},{"type":"DELETE","lineNumber":84,"oldContent":"        return UserDetails.super.isEnabled();"},{"type":"INSERT","lineNumber":86,"content":"        return true;"},{"type":"DELETE","lineNumber":86,"oldContent":""},{"type":"DELETE","lineNumber":88,"oldContent":"    @Override"}]},{"timestamp":1759827536445,"changes":[{"type":"DELETE","lineNumber":2,"oldContent":"import com.example.assetmanagement.entity.UserRole;"},{"type":"DELETE","lineNumber":9,"oldContent":"import org.springframework.security.core.GrantedAuthority;"},{"type":"DELETE","lineNumber":10,"oldContent":"import org.springframework.security.core.authority.SimpleGrantedAuthority;"},{"type":"DELETE","lineNumber":11,"oldContent":"import org.springframework.security.core.userdetails.UserDetails;"},{"type":"DELETE","lineNumber":14,"oldContent":"import java.util.Collection;"},{"type":"DELETE","lineNumber":15,"oldContent":"import java.util.List;"},{"type":"DELETE","lineNumber":24,"oldContent":"public class User implements UserDetails {"},{"type":"INSERT","lineNumber":18,"content":"public class User {"},{"type":"DELETE","lineNumber":40,"oldContent":"    @Column(unique = true, nullable = false)"},{"type":"DELETE","lineNumber":41,"oldContent":"    private String email;"},{"type":"DELETE","lineNumber":42,"oldContent":""},{"type":"DELETE","lineNumber":43,"oldContent":"    @Column(nullable = false)"},{"type":"DELETE","lineNumber":44,"oldContent":"    private String password;"},{"type":"DELETE","lineNumber":45,"oldContent":""},{"type":"INSERT","lineNumber":42,"content":"    @OneToOne(cascade = CascadeType.ALL)"},{"type":"INSERT","lineNumber":43,"content":"    @JoinColumn(name = \"login_id\", referencedColumnName = \"id\")"},{"type":"INSERT","lineNumber":44,"content":"    private Login login;"},{"type":"DELETE","lineNumber":55,"oldContent":""},{"type":"DELETE","lineNumber":58,"oldContent":""},{"type":"DELETE","lineNumber":59,"oldContent":"    @Override"},{"type":"DELETE","lineNumber":60,"oldContent":"    public Collection<? extends GrantedAuthority> getAuthorities() {"},{"type":"DELETE","lineNumber":61,"oldContent":"        return List.of(new SimpleGrantedAuthority(role.name()));"},{"type":"DELETE","lineNumber":62,"oldContent":"    }"},{"type":"DELETE","lineNumber":63,"oldContent":""},{"type":"DELETE","lineNumber":64,"oldContent":"    @Override"},{"type":"DELETE","lineNumber":65,"oldContent":"    public String getUsername() {"},{"type":"DELETE","lineNumber":66,"oldContent":"        return email;"},{"type":"DELETE","lineNumber":67,"oldContent":"    }"},{"type":"DELETE","lineNumber":68,"oldContent":""},{"type":"DELETE","lineNumber":69,"oldContent":"    @Override"},{"type":"DELETE","lineNumber":70,"oldContent":"    public boolean isAccountNonExpired() {"},{"type":"DELETE","lineNumber":71,"oldContent":"        return true;"},{"type":"DELETE","lineNumber":72,"oldContent":"    }"},{"type":"DELETE","lineNumber":73,"oldContent":""},{"type":"DELETE","lineNumber":74,"oldContent":"    @Override"},{"type":"DELETE","lineNumber":75,"oldContent":"    public boolean isAccountNonLocked() {"},{"type":"DELETE","lineNumber":76,"oldContent":"        return true;"},{"type":"DELETE","lineNumber":77,"oldContent":"    }"},{"type":"DELETE","lineNumber":78,"oldContent":""},{"type":"DELETE","lineNumber":79,"oldContent":"    @Override"},{"type":"DELETE","lineNumber":80,"oldContent":"    public boolean isCredentialsNonExpired() {"},{"type":"DELETE","lineNumber":81,"oldContent":"        return true;"},{"type":"DELETE","lineNumber":82,"oldContent":"    }"},{"type":"DELETE","lineNumber":83,"oldContent":""},{"type":"DELETE","lineNumber":84,"oldContent":"    public boolean isEnabled() {"},{"type":"DELETE","lineNumber":85,"oldContent":"    @Override"},{"type":"DELETE","lineNumber":86,"oldContent":"    }"},{"type":"DELETE","lineNumber":87,"oldContent":"        return true;"}]}]},"C:/Users/naresh.b/Downloads/Archivist/assetmanagement/src/main/java/com/example/assetmanagement/entity/UserRole.java":{"filePath":"C:/Users/naresh.b/Downloads/Archivist/assetmanagement/src/main/java/com/example/assetmanagement/entity/UserRole.java","baseContent":"package com.example.assetmanagement.entity;\n\npublic enum UserRole {\n    \n}\n","baseTimestamp":1759826556539,"deltas":[{"timestamp":1759826575741,"changes":[{"type":"MODIFY","lineNumber":3,"content":"    ADMIN","oldContent":"    "}]},{"timestamp":1759826583523,"changes":[{"type":"MODIFY","lineNumber":3,"content":"    EMPLOYEE, ADMIN","oldContent":"    ADMIN"}]}]},"C:/Users/naresh.b/Downloads/Archivist/assetmanagement/src/main/java/com/example/assetmanagement/entity/Asset.java":{"filePath":"C:/Users/naresh.b/Downloads/Archivist/assetmanagement/src/main/java/com/example/assetmanagement/entity/Asset.java","baseContent":"package com.example.assetmanagement.entity;\n\nimport jakarta.persistence.*;\nimport lombok.AllArgsConstructor;\nimport lombok.Getter;\nimport lombok.NoArgsConstructor;\nimport lombok.Setter;\nimport org.hibernate.annotations.CreationTimestamp;\nimport org.hibernate.annotations.UpdateTimestamp;\n\nimport java.math.BigDecimal;\nimport java.time.LocalDate;\nimport java.time.LocalDateTime;\n\n@Entity\n@Table(name = \"assets\")\n@Getter\n@Setter\n@NoArgsConstructor\n@AllArgsConstructor\npublic class Asset {\n\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    @Column(name = \"asset_id\")\n    private Long assetId;\n\n    @Column(nullable = false)\n    private String name;\n\n    private String description;\n\n    @Column(nullable = false)\n    private String category;\n\n    @Column(name = \"purchase_date\")\n    private LocalDate purchaseDate;\n\n    @Column(name = \"purchase_price\")\n    private BigDecimal purchasePrice;\n\n    @Column(nullable = false)\n    private String status;\n\n    @ManyToOne(fetch = FetchType.LAZY)\n    @JoinColumn(name = \"assigned_to_user_id\")\n    private User assignedTo;\n\n    @CreationTimestamp\n    @Column(name = \"created_at\", updatable = false)\n    private LocalDateTime createdAt;\n\n    @UpdateTimestamp\n    @Column(name = \"updated_at\")\n    private LocalDateTime updatedAt;\n}","baseTimestamp":1759827181414,"deltas":[{"timestamp":1759830160668,"changes":[{"type":"INSERT","lineNumber":34,"content":"    "},{"type":"DELETE","lineNumber":35,"oldContent":"    @Column(name = \"purchase_date\")"},{"type":"DELETE","lineNumber":36,"oldContent":"    private LocalDate purchaseDate;"},{"type":"DELETE","lineNumber":37,"oldContent":""},{"type":"DELETE","lineNumber":38,"oldContent":"    @Column(name = \"purchase_price\")"},{"type":"DELETE","lineNumber":39,"oldContent":"    private BigDecimal purchasePrice;"},{"type":"DELETE","lineNumber":40,"oldContent":""}]},{"timestamp":1759830164126,"changes":[{"type":"INSERT","lineNumber":35,"content":"    "}]},{"timestamp":1759830175426,"changes":[{"type":"MODIFY","lineNumber":35,"content":"    private ","oldContent":"    "}]},{"timestamp":1759830187708,"changes":[{"type":"MODIFY","lineNumber":35,"content":"    private Integer quantity;","oldContent":"    private "}]},{"timestamp":1759830234124,"changes":[{"type":"INSERT","lineNumber":35,"content":"    "}]},{"timestamp":1759830240729,"changes":[{"type":"DELETE","lineNumber":35,"oldContent":"    "}]},{"timestamp":1759830390237,"changes":[{"type":"MODIFY","lineNumber":34,"content":"","oldContent":"    "}]},{"timestamp":1759832510586,"changes":[{"type":"INSERT","lineNumber":51,"content":""},{"type":"INSERT","lineNumber":52,"content":"    public void setPurchaseDate(LocalDate purchaseDate) {"},{"type":"INSERT","lineNumber":53,"content":"    }"}]},{"timestamp":1759832514885,"changes":[{"type":"INSERT","lineNumber":52,"content":""},{"type":"DELETE","lineNumber":53,"oldContent":"    public void setPurchaseDate(LocalDate purchaseDate) {"},{"type":"DELETE","lineNumber":54,"oldContent":"    }"}]},{"timestamp":1759834382653,"changes":[{"type":"MODIFY","lineNumber":35,"content":"    @Column(name = \"purchase_date\")","oldContent":"    private Integer quantity;"},{"type":"INSERT","lineNumber":36,"content":"    private LocalDate purchaseDate;"},{"type":"INSERT","lineNumber":38,"content":"    @Column(name = \"purchase_price\")"},{"type":"INSERT","lineNumber":39,"content":"    private BigDecimal purchasePrice;"},{"type":"INSERT","lineNumber":40,"content":""},{"type":"DELETE","lineNumber":51,"oldContent":""},{"type":"DELETE","lineNumber":52,"oldContent":""}]},{"timestamp":1759898670429,"changes":[{"type":"DELETE","lineNumber":32,"oldContent":"    @Column(nullable = false)"},{"type":"DELETE","lineNumber":33,"oldContent":"    private String category;"},{"type":"INSERT","lineNumber":32,"content":"    @ManyToOne(fetch = FetchType.LAZY)"},{"type":"INSERT","lineNumber":33,"content":"    @JoinColumn(name = \"category_id\", nullable = false)"},{"type":"INSERT","lineNumber":34,"content":"    private Category category; // Replaced String with Category entity"},{"type":"DELETE","lineNumber":38,"oldContent":"    @Column(nullable = false)"},{"type":"DELETE","lineNumber":40,"oldContent":"    private String status;"},{"type":"INSERT","lineNumber":42,"content":"    @Column(nullable = false)"},{"type":"INSERT","lineNumber":43,"content":"    private String status;"},{"type":"INSERT","lineNumber":57,"content":""}]},{"timestamp":1759899029708,"changes":[{"type":"DELETE","lineNumber":32,"oldContent":"    @ManyToOne(fetch = FetchType.LAZY)"},{"type":"DELETE","lineNumber":33,"oldContent":"    @JoinColumn(name = \"category_id\", nullable = false)"},{"type":"DELETE","lineNumber":34,"oldContent":"    private Category category; // Replaced String with Category entity"},{"type":"INSERT","lineNumber":32,"content":"    @Column(nullable = false)"},{"type":"INSERT","lineNumber":33,"content":"    private String category;"},{"type":"MODIFY","lineNumber":41,"content":"    @Column(nullable = false)","oldContent":"    @Column(nullable = false)"},{"type":"DELETE","lineNumber":57,"oldContent":""}]}]},"C:/Users/naresh.b/Downloads/Archivist/assetmanagement/src/main/java/com/example/assetmanagement/repository/UserRepository.java":{"filePath":"C:/Users/naresh.b/Downloads/Archivist/assetmanagement/src/main/java/com/example/assetmanagement/repository/UserRepository.java","baseContent":"package com.example.assetmanagement.repository;\n\nimport com.example.assetmanagement.entity.User;\nimport org.springframework.data.jpa.repository.JpaRepository;\nimport org.springframework.stereotype.Repository;\n\nimport java.util.Optional;\n\n@Repository\npublic interface UserRepository extends JpaRepository<User, Long> {\n    Optional<User> findByEmail(String email);\n}","baseTimestamp":1759827224865,"deltas":[{"timestamp":1759827587721,"changes":[{"type":"DELETE","lineNumber":6,"oldContent":"import java.util.Optional;"},{"type":"DELETE","lineNumber":7,"oldContent":""},{"type":"DELETE","lineNumber":10,"oldContent":"    Optional<User> findByEmail(String email);"},{"type":"INSERT","lineNumber":9,"content":""}]}]},"C:/Users/naresh.b/Downloads/Archivist/assetmanagement/src/main/java/com/example/assetmanagement/repository/AssetRepository.java":{"filePath":"C:/Users/naresh.b/Downloads/Archivist/assetmanagement/src/main/java/com/example/assetmanagement/repository/AssetRepository.java","baseContent":"package com.example.assetmanagement.repository;\n\nimport com.example.assetmanagement.entity.Asset;\nimport com.example.assetmanagement.entity.User;\nimport org.springframework.data.jpa.repository.JpaRepository;\nimport org.springframework.stereotype.Repository;\n\nimport java.util.List;\n\n@Repository\npublic interface AssetRepository extends JpaRepository<Asset, Long> {\n    List<Asset> findByStatus(String status);\n    List<Asset> findByAssignedTo(User user);\n}","baseTimestamp":1759827237117},"C:/Users/naresh.b/Downloads/Archivist/assetmanagement/src/main/java/com/example/assetmanagement/service/AssetService.java":{"filePath":"C:/Users/naresh.b/Downloads/Archivist/assetmanagement/src/main/java/com/example/assetmanagement/service/AssetService.java","baseContent":"package com.example.assetmanagement.service;\n\nimport com.example.assetmanagement.entity.Asset;\nimport java.util.List;\nimport java.util.Optional;\n\npublic interface AssetService {\n    Asset save(Asset asset);\n    Optional<Asset> findById(Long id);\n    List<Asset> findAll();\n    List<Asset> findByStatus(String status);\n    List<Asset> findByUserId(Long userId);\n    Asset assignAsset(Long assetId, Long userId);\n    \n    \n}","baseTimestamp":1759829397877,"deltas":[{"timestamp":1759829461772,"changes":[{"type":"DELETE","lineNumber":13,"oldContent":"    "},{"type":"MODIFY","lineNumber":13,"content":"","oldContent":"    "},{"type":"INSERT","lineNumber":14,"content":""}]},{"timestamp":1759831582048,"changes":[{"type":"DELETE","lineNumber":13,"oldContent":""},{"type":"DELETE","lineNumber":14,"oldContent":"    "},{"type":"INSERT","lineNumber":13,"content":"    void deleteById(Long id);"}]}]},"C:/Users/naresh.b/Downloads/Archivist/assetmanagement/src/main/java/com/example/assetmanagement/util/AssetMapper.java":{"filePath":"C:/Users/naresh.b/Downloads/Archivist/assetmanagement/src/main/java/com/example/assetmanagement/util/AssetMapper.java","baseContent":"package com.example.assetmanagement.util;\n\nimport com.example.assetmanagement.dto.AssetDto;\nimport com.example.assetmanagement.entity.Asset;\nimport com.example.assetmanagement.entity.User;\n\npublic class AssetMapper {\n\n    public static AssetDto toDto(Asset asset) {\n        if (asset == null) {\n            return null;\n        }\n\n        AssetDto assetDto = new AssetDto();\n        assetDto.setAsset_id(asset.getAsset_id());\n        assetDto.setAsset_name(asset.getAsset_name());\n        assetDto.setStatus(asset.getStatus());\n        assetDto.setQuantity(asset.getQuantity());\n        if (asset.getUser() != null) {\n            assetDto.setUserId(asset.getUser().getId());\n        }\n\n        return assetDto;\n    }\n\n    public static Asset toEntity(AssetDto assetDto) {\n        if (assetDto == null) {\n            return null;\n        }\n\n        Asset asset = new Asset();\n        asset.setAsset_id(assetDto.getAsset_id());\n        asset.setAsset_name(assetDto.getAsset_name());\n        asset.setStatus(assetDto.getStatus());\n        asset.setQuantity(assetDto.getQuantity());\n\n        if (assetDto.getUserId() != null) {\n            User user = new User();\n            user.setId(assetDto.getUserId());\n            asset.setUser(user);\n        }\n\n        return asset;\n    }\n}\n ","baseTimestamp":1759829469464,"deltas":[{"timestamp":1759829485504,"changes":[{"type":"DELETE","lineNumber":2,"oldContent":"import com.example.assetmanagement.dto.AssetDto;"},{"type":"DELETE","lineNumber":3,"oldContent":"import com.example.assetmanagement.entity.Asset;"},{"type":"DELETE","lineNumber":4,"oldContent":"import com.example.assetmanagement.entity.User;"},{"type":"DELETE","lineNumber":5,"oldContent":""},{"type":"DELETE","lineNumber":7,"oldContent":""},{"type":"DELETE","lineNumber":8,"oldContent":"    public static AssetDto toDto(Asset asset) {"},{"type":"DELETE","lineNumber":9,"oldContent":"        if (asset == null) {"},{"type":"DELETE","lineNumber":10,"oldContent":"            return null;"},{"type":"DELETE","lineNumber":11,"oldContent":"        }"},{"type":"DELETE","lineNumber":12,"oldContent":""},{"type":"DELETE","lineNumber":13,"oldContent":"        AssetDto assetDto = new AssetDto();"},{"type":"DELETE","lineNumber":14,"oldContent":"        assetDto.setAsset_id(asset.getAsset_id());"},{"type":"DELETE","lineNumber":15,"oldContent":"        assetDto.setAsset_name(asset.getAsset_name());"},{"type":"DELETE","lineNumber":16,"oldContent":"        assetDto.setStatus(asset.getStatus());"},{"type":"DELETE","lineNumber":17,"oldContent":"        assetDto.setQuantity(asset.getQuantity());"},{"type":"DELETE","lineNumber":18,"oldContent":"        if (asset.getUser() != null) {"},{"type":"DELETE","lineNumber":19,"oldContent":"            assetDto.setUserId(asset.getUser().getId());"},{"type":"DELETE","lineNumber":20,"oldContent":"        }"},{"type":"DELETE","lineNumber":21,"oldContent":""},{"type":"DELETE","lineNumber":22,"oldContent":"        return assetDto;"},{"type":"DELETE","lineNumber":23,"oldContent":"    }"},{"type":"DELETE","lineNumber":24,"oldContent":""},{"type":"DELETE","lineNumber":25,"oldContent":"    public static Asset toEntity(AssetDto assetDto) {"},{"type":"DELETE","lineNumber":26,"oldContent":"        if (assetDto == null) {"},{"type":"DELETE","lineNumber":27,"oldContent":"            return null;"},{"type":"DELETE","lineNumber":28,"oldContent":"        }"},{"type":"DELETE","lineNumber":29,"oldContent":""},{"type":"DELETE","lineNumber":30,"oldContent":"        Asset asset = new Asset();"},{"type":"DELETE","lineNumber":31,"oldContent":"        asset.setAsset_id(assetDto.getAsset_id());"},{"type":"DELETE","lineNumber":32,"oldContent":"        asset.setAsset_name(assetDto.getAsset_name());"},{"type":"DELETE","lineNumber":33,"oldContent":"        asset.setStatus(assetDto.getStatus());"},{"type":"DELETE","lineNumber":34,"oldContent":"        asset.setQuantity(assetDto.getQuantity());"},{"type":"DELETE","lineNumber":35,"oldContent":""},{"type":"DELETE","lineNumber":36,"oldContent":"        if (assetDto.getUserId() != null) {"},{"type":"DELETE","lineNumber":37,"oldContent":"            User user = new User();"},{"type":"DELETE","lineNumber":38,"oldContent":"            user.setId(assetDto.getUserId());"},{"type":"DELETE","lineNumber":39,"oldContent":"            asset.setUser(user);"},{"type":"DELETE","lineNumber":40,"oldContent":"        }"},{"type":"DELETE","lineNumber":41,"oldContent":""},{"type":"DELETE","lineNumber":42,"oldContent":"        return asset;"},{"type":"DELETE","lineNumber":43,"oldContent":"    }"},{"type":"DELETE","lineNumber":45,"oldContent":" "},{"type":"INSERT","lineNumber":4,"content":""}]}]},"C:/Users/naresh.b/Downloads/Archivist/assetmanagement/src/main/java/com/example/assetmanagement/dto/LoginRequest.java":{"filePath":"C:/Users/naresh.b/Downloads/Archivist/assetmanagement/src/main/java/com/example/assetmanagement/dto/LoginRequest.java","baseContent":"package com.example.assetmanagement.dto;\n\npublic class LoginRequest {\n}\n","baseTimestamp":1759819482780,"deltas":[{"timestamp":1759830938447,"changes":[{"type":"INSERT","lineNumber":2,"content":"import lombok.Data;"},{"type":"INSERT","lineNumber":3,"content":""},{"type":"INSERT","lineNumber":4,"content":"@Data"},{"type":"INSERT","lineNumber":6,"content":"    private String username;"},{"type":"INSERT","lineNumber":7,"content":"    private String password;"}]},{"timestamp":1759898449408,"changes":[{"type":"INSERT","lineNumber":2,"content":"import jakarta.validation.constraints.NotEmpty;"},{"type":"DELETE","lineNumber":3,"oldContent":"public class LoginRequest {"},{"type":"DELETE","lineNumber":5,"oldContent":"}"},{"type":"INSERT","lineNumber":6,"content":"public class LoginRequest {"},{"type":"MODIFY","lineNumber":8,"content":"    @NotEmpty(message = \"Username cannot be empty\")","oldContent":"    private String password;"},{"type":"INSERT","lineNumber":10,"content":""},{"type":"INSERT","lineNumber":11,"content":"    @NotEmpty(message = \"Password cannot be empty\")"},{"type":"INSERT","lineNumber":12,"content":"    private String password;"},{"type":"INSERT","lineNumber":13,"content":"}"},{"type":"INSERT","lineNumber":14,"content":""}]},{"timestamp":1759899029220,"changes":[{"type":"DELETE","lineNumber":2,"oldContent":"import jakarta.validation.constraints.NotEmpty;"},{"type":"DELETE","lineNumber":5,"oldContent":"public class LoginRequest {"},{"type":"DELETE","lineNumber":7,"oldContent":""},{"type":"DELETE","lineNumber":8,"oldContent":"    @NotEmpty(message = \"Username cannot be empty\")"},{"type":"INSERT","lineNumber":5,"content":"public class LoginRequest {"},{"type":"DELETE","lineNumber":10,"oldContent":""},{"type":"DELETE","lineNumber":11,"oldContent":""},{"type":"DELETE","lineNumber":12,"oldContent":"    @NotEmpty(message = \"Password cannot be empty\")"},{"type":"DELETE","lineNumber":13,"oldContent":"}"},{"type":"INSERT","lineNumber":8,"content":"}"},{"type":"INSERT","lineNumber":9,"content":""}]}]},"C:/Users/naresh.b/Downloads/Archivist/assetmanagement/src/main/resources/application.properties":{"filePath":"C:/Users/naresh.b/Downloads/Archivist/assetmanagement/src/main/resources/application.properties","baseContent":"spring.application.name=assetmanagement\n\nspring.datasource.url=jdbc:mysql://localhost:3306/bookinventorydb?createDatabaseIfNotExist=true\nspring.datasource.username=root\nspring.datasource.password=root\nspring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect\nspring.jpa.hibernate.ddl-auto=update\nserver.port=9092","baseTimestamp":1759831341570,"deltas":[{"timestamp":1759831348131,"changes":[{"type":"MODIFY","lineNumber":2,"content":"spring.datasource.url=jdbc:mysql://localhost:3306/assetmanagement?createDatabaseIfNotExist=true","oldContent":"spring.datasource.url=jdbc:mysql://localhost:3306/bookinventorydb?createDatabaseIfNotExist=true"}]},{"timestamp":1759831421590,"changes":[{"type":"INSERT","lineNumber":8,"content":""},{"type":"INSERT","lineNumber":9,"content":"# JWT Properties"},{"type":"INSERT","lineNumber":10,"content":"app.jwt-secret=JWTSecretKey"},{"type":"INSERT","lineNumber":11,"content":"app.jwt-expiration-milliseconds=604800000"},{"type":"INSERT","lineNumber":12,"content":""}]},{"timestamp":1759832644616,"changes":[{"type":"MODIFY","lineNumber":7,"content":"server.port=8080","oldContent":"server.port=9092"},{"type":"DELETE","lineNumber":9,"oldContent":""},{"type":"MODIFY","lineNumber":11,"content":"app.jwt-expiration-milliseconds=604800000","oldContent":"app.jwt-expiration-milliseconds=604800000"},{"type":"INSERT","lineNumber":12,"content":""}]},{"timestamp":1759832650785,"changes":[{"type":"INSERT","lineNumber":9,"content":""},{"type":"INSERT","lineNumber":11,"content":"app.jwt-secret=JWTSecretKey"},{"type":"DELETE","lineNumber":12,"oldContent":"app.jwt-secret=JWTSecretKey"}]},{"timestamp":1759832665150,"changes":[{"type":"INSERT","lineNumber":8,"content":"springdoc.swagger-ui.path=/"},{"type":"DELETE","lineNumber":9,"oldContent":""},{"type":"MODIFY","lineNumber":12,"content":"app.jwt-expiration-milliseconds=604800000","oldContent":"app.jwt-expiration-milliseconds=604800000"}]},{"timestamp":1759834746376,"changes":[{"type":"DELETE","lineNumber":5,"oldContent":"spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect"},{"type":"INSERT","lineNumber":6,"content":"spring.jpa.open-in-view=false"},{"type":"INSERT","lineNumber":11,"content":"app.jwt-secret=JWTSecretKey"},{"type":"DELETE","lineNumber":12,"oldContent":"app.jwt-expiration-milliseconds=604800000"}]},{"timestamp":1759834995281,"changes":[{"type":"INSERT","lineNumber":3,"content":"spring.datasource.url=jdbc:mysql://localhost:3306/bookinventorydb?createDatabaseIfNotExist=true"},{"type":"INSERT","lineNumber":4,"content":""},{"type":"DELETE","lineNumber":5,"oldContent":"spring.jpa.open-in-view=false"},{"type":"INSERT","lineNumber":8,"content":"spring.jpa.open-in-view=false"}]},{"timestamp":1759834999084,"changes":[{"type":"DELETE","lineNumber":3,"oldContent":"spring.datasource.url=jdbc:mysql://localhost:3306/bookinventorydb?createDatabaseIfNotExist=true"},{"type":"DELETE","lineNumber":4,"oldContent":"spring.datasource.username=root"},{"type":"INSERT","lineNumber":3,"content":"spring.datasource.url=jdbc:mysql://localhost:3306/assetmanagement?createDatabaseIfNotExist=true"},{"type":"INSERT","lineNumber":5,"content":"spring.datasource.username=root"},{"type":"MODIFY","lineNumber":9,"content":"server.port=8080","oldContent":"server.port=8080"}]},{"timestamp":1759835001348,"changes":[{"type":"DELETE","lineNumber":3,"oldContent":"spring.datasource.url=jdbc:mysql://localhost:3306/assetmanagement?createDatabaseIfNotExist=true"},{"type":"MODIFY","lineNumber":4,"content":"spring.datasource.username=root","oldContent":"spring.datasource.username=root"},{"type":"INSERT","lineNumber":7,"content":"spring.jpa.open-in-view=false"},{"type":"DELETE","lineNumber":9,"oldContent":"server.port=8080"}]},{"timestamp":1759835259561,"changes":[{"type":"MODIFY","lineNumber":4,"content":"spring.datasource.username=root","oldContent":"spring.datasource.username=root"},{"type":"DELETE","lineNumber":6,"oldContent":"spring.jpa.open-in-view=false"},{"type":"DELETE","lineNumber":8,"oldContent":"server.port=8080"},{"type":"INSERT","lineNumber":7,"content":"spring.jpa.open-in-view=false"},{"type":"INSERT","lineNumber":8,"content":"server.port=91"}]},{"timestamp":1759835267066,"changes":[{"type":"INSERT","lineNumber":3,"content":""},{"type":"DELETE","lineNumber":4,"oldContent":"spring.datasource.username=root"},{"type":"DELETE","lineNumber":6,"oldContent":"spring.jpa.open-in-view=false"},{"type":"DELETE","lineNumber":8,"oldContent":"server.port=91"},{"type":"INSERT","lineNumber":7,"content":"spring.jpa.open-in-view=false"},{"type":"INSERT","lineNumber":8,"content":"server.port=9091"}]}]},"C:/Users/naresh.b/Downloads/Archivist/assetmanagement/pom.xml":{"filePath":"C:/Users/naresh.b/Downloads/Archivist/assetmanagement/pom.xml","baseContent":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n\t<modelVersion>4.0.0</modelVersion>\n\t<parent>\n\t\t<groupId>org.springframework.boot</groupId>\n\t\t<artifactId>spring-boot-starter-parent</artifactId>\n\t\t<version>3.5.6</version>\n\t\t<relativePath/> <!-- lookup parent from repository -->\n\t</parent>\n\t<groupId>com.example</groupId>\n\t<artifactId>assetmanagement</artifactId>\n\t<version>0.0.1-SNAPSHOT</version>\n\t<name>assetmanagement</name>\n\t<description>Demo project for Spring Boot</description>\n\t<url/>\n\t<licenses>\n\t\t<license/>\n\t</licenses>\n\t<developers>\n\t\t<developer/>\n\t</developers>\n\t<scm>\n\t\t<connection/>\n\t\t<developerConnection/>\n\t\t<tag/>\n\t\t<url/>\n\t</scm>\n\t<properties>\n\t\t<java.version>17</java.version>\n\t</properties>\n\t<dependencies>\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-starter-data-jpa</artifactId>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-starter-security</artifactId>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-starter-web</artifactId>\n\t\t</dependency>\n\n\t\t<!-- JWT Dependencies -->\n\t\t<dependency>\n\t\t\t<groupId>io.jsonwebtoken</groupId>\n\t\t\t<artifactId>jjwt-api</artifactId>\n\t\t\t<version>0.11.5</version>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>io.jsonwebtoken</groupId>\n\t\t\t<artifactId>jjwt-impl</artifactId>\n\t\t\t<version>0.11.5</version>\n\t\t\t<scope>runtime</scope>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>io.jsonwebtoken</groupId>\n\t\t\t<artifactId>jjwt-jackson</artifactId>\n\t\t\t<version>0.11.5</version>\n\t\t\t<scope>runtime</scope>\n\t\t</dependency>\n\t\t<!-- End JWT Dependencies -->\n\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-devtools</artifactId>\n\t\t\t<scope>runtime</scope>\n\t\t\t<optional>true</optional>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>com.mysql</groupId>\n\t\t\t<artifactId>mysql-connector-j</artifactId>\n\t\t\t<scope>runtime</scope>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>org.projectlombok</groupId>\n\t\t\t<artifactId>lombok</artifactId>\n\t\t\t<optional>true</optional>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-starter-test</artifactId>\n\t\t\t<scope>test</scope>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.security</groupId>\n\t\t\t<artifactId>spring-security-test</artifactId>\n\t\t\t<scope>test</scope>\n\t\t</dependency>\n\t</dependencies>\n\n\t<build>\n\t\t<plugins>\n\t\t\t<plugin>\n\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n\t\t\t\t<artifactId>maven-compiler-plugin</artifactId>\n\t\t\t\t<configuration>\n\t\t\t\t\t<annotationProcessorPaths>\n\t\t\t\t\t\t<path>\n\t\t\t\t\t\t\t<groupId>org.projectlombok</groupId>\n\t\t\t\t\t\t\t<artifactId>lombok</artifactId>\n\t\t\t\t\t\t</path>\n\t\t\t\t\t</annotationProcessorPaths>\n\t\t\t\t</configuration>\n\t\t\t</plugin>\n\t\t\t<plugin>\n\t\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t\t<artifactId>spring-boot-maven-plugin</artifactId>\n\t\t\t\t<configuration>\n\t\t\t\t\t<excludes>\n\t\t\t\t\t\t<exclude>\n\t\t\t\t\t\t\t<groupId>org.projectlombok</groupId>\n\t\t\t\t\t\t\t<artifactId>lombok</artifactId>\n\t\t\t\t\t\t</exclude>\n\t\t\t\t\t</excludes>\n\t\t\t\t</configuration>\n\t\t\t</plugin>\n\t\t</plugins>\n\t</build>\n\n</project>","baseTimestamp":1759831362903,"deltas":[{"timestamp":1759834474051,"changes":[{"type":"INSERT","lineNumber":91,"content":"\t\t<dependency>"},{"type":"INSERT","lineNumber":92,"content":"\t\t\t<groupId>org.springdoc</groupId>"},{"type":"INSERT","lineNumber":93,"content":"\t\t\t<artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>"},{"type":"INSERT","lineNumber":94,"content":"\t\t\t<version>2.8.13</version>"},{"type":"INSERT","lineNumber":95,"content":"\t\t</dependency>"}]},{"timestamp":1759835054364,"changes":[{"type":"MODIFY","lineNumber":7,"content":"\t\t<version>3.2.5</version>","oldContent":"\t\t<version>3.5.6</version>"},{"type":"DELETE","lineNumber":92,"oldContent":"\t</dependencies>"},{"type":"DELETE","lineNumber":94,"oldContent":""},{"type":"DELETE","lineNumber":96,"oldContent":"\t<build>"},{"type":"DELETE","lineNumber":98,"oldContent":"\t\t<plugins>"},{"type":"INSERT","lineNumber":96,"content":"\t</dependencies>"},{"type":"INSERT","lineNumber":97,"content":""},{"type":"INSERT","lineNumber":98,"content":"\t<build>"},{"type":"INSERT","lineNumber":99,"content":"\t\t<plugins>"}]},{"timestamp":1759835209356,"changes":[{"type":"MODIFY","lineNumber":7,"content":"\t\t<version>3.5.6</version>","oldContent":"\t\t<version>3.2.5</version>"},{"type":"INSERT","lineNumber":94,"content":"\t\t\t<version>2.8.13</version>"},{"type":"INSERT","lineNumber":95,"content":"\t\t</dependency>"},{"type":"DELETE","lineNumber":96,"oldContent":"\t\t\t<version>2.8.13</version>"},{"type":"DELETE","lineNumber":99,"oldContent":"\t\t</dependency>"}]}]},"C:/Users/naresh.b/Downloads/Archivist/assetmanagement/src/main/java/com/example/assetmanagement/config/SecurityConfig.java":{"filePath":"C:/Users/naresh.b/Downloads/Archivist/assetmanagement/src/main/java/com/example/assetmanagement/config/SecurityConfig.java","baseContent":"package com.example.assetmanagement.config;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.http.HttpMethod;\nimport org.springframework.security.authentication.AuthenticationManager;\nimport org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration;\nimport org.springframework.security.config.annotation.method.configuration.EnableMethodSecurity;\nimport org.springframework.security.config.annotation.web.builders.HttpSecurity;\nimport org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;\nimport org.springframework.security.config.http.SessionCreationPolicy;\nimport org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;\nimport org.springframework.security.crypto.password.PasswordEncoder;\nimport org.springframework.security.web.SecurityFilterChain;\nimport org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter;\n\n@Configuration\n@EnableWebSecurity\n@EnableMethodSecurity\npublic class SecurityConfig {\n\n    @Autowired\n    private JwtAuthenticationEntryPoint authenticationEntryPoint;\n\n    @Autowired\n    private JwtAuthenticationFilter authenticationFilter;\n\n    @Bean\n    public static PasswordEncoder passwordEncoder() {\n        return new BCryptPasswordEncoder();\n    }\n\n    @Bean\n    public AuthenticationManager authenticationManager(AuthenticationConfiguration configuration) throws Exception {\n        return configuration.getAuthenticationManager();\n    }\n\n    @Bean\n    public SecurityFilterChain securityFilterChain(HttpSecurity http) throws Exception {\n        http.csrf(csrf -> csrf.disable())\n                .exceptionHandling(exception -> exception.authenticationEntryPoint(authenticationEntryPoint))\n                .sessionManagement(session -> session.sessionCreationPolicy(SessionCreationPolicy.STATELESS))\n                .authorizeHttpRequests(authorize ->\n                        authorize.requestMatchers(\"/api/auth/**\").permitAll()\n                                .requestMatchers(HttpMethod.OPTIONS, \"/**\").permitAll()\n                                .anyRequest().authenticated()\n                );\n\n        http.addFilterBefore(authenticationFilter, UsernamePasswordAuthenticationFilter.class);\n\n        return http.build();\n    }\n}\n","baseTimestamp":1759831403747,"deltas":[{"timestamp":1759831601127,"changes":[{"type":"MODIFY","lineNumber":26,"content":"    private JwtAuthFilter authenticationFilter;","oldContent":"    private JwtAuthenticationFilter authenticationFilter;"}]},{"timestamp":1759834833818,"changes":[{"type":"MODIFY","lineNumber":26,"content":"    private JwtAuthenticationFilter authenticationFilter;","oldContent":"    private JwtAuthFilter authenticationFilter;"}]},{"timestamp":1759835734756,"changes":[{"type":"INSERT","lineNumber":45,"content":"                                 // Permit all requests to Swagger UI and API docs"},{"type":"INSERT","lineNumber":46,"content":"                                .requestMatchers(\"/\", \"/swagger-ui/**\", \"/swagger-ui.html\", \"/v3/api-docs/**\").permitAll()"}]}]},"C:/Users/naresh.b/Downloads/Archivist/assetmanagement/src/main/java/com/example/assetmanagement/controller/AuthController.java":{"filePath":"C:/Users/naresh.b/Downloads/Archivist/assetmanagement/src/main/java/com/example/assetmanagement/controller/AuthController.java","baseContent":"package com.example.assetmanagement.controller;\n\nimport com.example.assetmanagement.dto.JwtAuthResponse;\nimport com.example.assetmanagement.dto.LoginRequest;\nimport com.example.assetmanagement.dto.RegisterRequestDto;\nimport com.example.assetmanagement.entity.User;\nimport com.example.assetmanagement.mapper.UserMapper;\nimport com.example.assetmanagement.service.LoginService;\nimport com.example.assetmanagement.service.UserService;\nimport com.example.assetmanagement.util.JwtTokenProvider;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.http.HttpStatus;\nimport org.springframework.http.ResponseEntity;\nimport org.springframework.security.authentication.AuthenticationManager;\nimport org.springframework.security.authentication.UsernamePasswordAuthenticationToken;\nimport org.springframework.security.core.Authentication;\nimport org.springframework.security.core.context.SecurityContextHolder;\nimport org.springframework.web.bind.annotation.PostMapping;\nimport org.springframework.web.bind.annotation.RequestBody;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\n@RestController\n@RequestMapping(\"/api/auth\")\npublic class AuthController {\n\n    @Autowired\n    private AuthenticationManager authenticationManager;\n\n    @Autowired\n    private UserService userService;\n\n    @Autowired\n    private LoginService loginService; // Although not directly used for saving, it's good to have if needed for specific login operations\n\n    @Autowired\n    private JwtTokenProvider jwtTokenProvider;\n\n    @PostMapping(\"/login\")\n    public ResponseEntity<JwtAuthResponse> authenticateUser(@RequestBody LoginRequest loginRequest) {\n        Authentication authentication = authenticationManager.authenticate(new UsernamePasswordAuthenticationToken(\n                loginRequest.getUsername(), loginRequest.getPassword()));\n\n        SecurityContextHolder.getContext().setAuthentication(authentication);\n\n        // Get token from tokenProvider\n        String token = jwtTokenProvider.generateToken(authentication);\n\n        return ResponseEntity.ok(new JwtAuthResponse(token));\n    }\n\n    @PostMapping(\"/register\")\n    public ResponseEntity<String> registerUser(@RequestBody RegisterRequestDto registerRequestDto) {\n        // Check if username already exists\n        // Note: loadUserByUsername throws UsernameNotFoundException if user not found, so we catch it.\n        try {\n            loginService.loadUserByUsername(registerRequestDto.getUsername());\n            return new ResponseEntity<>(\"Username is already taken!\", HttpStatus.BAD_REQUEST);\n        } catch (org.springframework.security.core.userdetails.UsernameNotFoundException e) {\n            // Username not found, proceed with registration\n        }\n\n        // A more robust check for email uniqueness would involve a specific findByEmail method in LoginRepository\n        // For now, we'll assume username is the primary unique identifier for login.\n\n        User user = UserMapper.fromRegisterRequestDto(registerRequestDto);\n        userService.save(user);\n\n        return new ResponseEntity<>(\"User registered successfully!\", HttpStatus.OK);\n    }\n}\n","baseTimestamp":1759831459479,"deltas":[{"timestamp":1759831893479,"changes":[{"type":"MODIFY","lineNumber":9,"content":"import com.example.assetmanagement.util.JwtTokenUtil;","oldContent":"import com.example.assetmanagement.util.JwtTokenProvider;"},{"type":"MODIFY","lineNumber":36,"content":"    private JwtTokenUtil jwtTokenProvider;","oldContent":"    private JwtTokenProvider jwtTokenProvider;"}]},{"timestamp":1759834412652,"changes":[{"type":"MODIFY","lineNumber":7,"content":"import com.example.assetmanagement.repository.LoginRepository;","oldContent":"import com.example.assetmanagement.service.LoginService;"},{"type":"MODIFY","lineNumber":9,"content":"import com.example.assetmanagement.util.JwtTokenProvider;","oldContent":"import com.example.assetmanagement.util.JwtTokenUtil;"},{"type":"MODIFY","lineNumber":33,"content":"    private LoginRepository loginRepository;","oldContent":"    private LoginService loginService; // Although not directly used for saving, it's good to have if needed for specific login operations"},{"type":"MODIFY","lineNumber":36,"content":"    private JwtTokenProvider jwtTokenProvider;","oldContent":"    private JwtTokenUtil jwtTokenProvider;"},{"type":"DELETE","lineNumber":45,"oldContent":"        // Get token from tokenProvider"},{"type":"MODIFY","lineNumber":51,"content":"    public ResponseEntity<?> registerUser(@RequestBody RegisterRequestDto registerRequestDto) {","oldContent":"    public ResponseEntity<String> registerUser(@RequestBody RegisterRequestDto registerRequestDto) {"},{"type":"DELETE","lineNumber":54,"oldContent":"        // Note: loadUserByUsername throws UsernameNotFoundException if user not found, so we catch it."},{"type":"DELETE","lineNumber":55,"oldContent":"        try {"},{"type":"DELETE","lineNumber":56,"oldContent":"            loginService.loadUserByUsername(registerRequestDto.getUsername());"},{"type":"INSERT","lineNumber":53,"content":"        if (loginRepository.existsByUsername(registerRequestDto.getUsername())) {"},{"type":"DELETE","lineNumber":58,"oldContent":"        } catch (org.springframework.security.core.userdetails.UsernameNotFoundException e) {"},{"type":"DELETE","lineNumber":59,"oldContent":"            // Username not found, proceed with registration"},{"type":"DELETE","lineNumber":62,"oldContent":"        // A more robust check for email uniqueness would involve a specific findByEmail method in LoginRepository"},{"type":"DELETE","lineNumber":63,"oldContent":"        // For now, we'll assume username is the primary unique identifier for login."},{"type":"INSERT","lineNumber":57,"content":"        // Check if email already exists"},{"type":"INSERT","lineNumber":58,"content":"        if (loginRepository.existsByEmail(registerRequestDto.getEmail())) {"},{"type":"INSERT","lineNumber":59,"content":"            return new ResponseEntity<>(\"Email is already taken!\", HttpStatus.BAD_REQUEST);"},{"type":"INSERT","lineNumber":60,"content":"        }"},{"type":"DELETE","lineNumber":68,"oldContent":"        return new ResponseEntity<>(\"User registered successfully!\", HttpStatus.OK);"},{"type":"INSERT","lineNumber":65,"content":"        return new ResponseEntity<>(\"User registered successfully!\", HttpStatus.CREATED);"}]},{"timestamp":1759834521010,"changes":[{"type":"DELETE","lineNumber":9,"oldContent":"import com.example.assetmanagement.util.JwtTokenProvider;"},{"type":"INSERT","lineNumber":49,"content":"    @PostMapping(\"/register\")"},{"type":"DELETE","lineNumber":51,"oldContent":"    public ResponseEntity<String> registerUser(@RequestBody RegisterRequestDto registerRequestDto) {"},{"type":"DELETE","lineNumber":52,"oldContent":"        if (loginRepository.existsByUsername(registerRequestDto.getUsername())) {"},{"type":"DELETE","lineNumber":54,"oldContent":"        // Check if email already exists"},{"type":"INSERT","lineNumber":52,"content":"        if (loginRepository.existsByUsername(registerRequestDto.getUsername())) {"},{"type":"INSERT","lineNumber":54,"content":"        }"},{"type":"INSERT","lineNumber":55,"content":""},{"type":"INSERT","lineNumber":56,"content":"        // Check if email already exists"},{"type":"DELETE","lineNumber":59,"oldContent":"        }"},{"type":"DELETE","lineNumber":61,"oldContent":""},{"type":"DELETE","lineNumber":62,"oldContent":"        return new ResponseEntity<>(\"User registered successfully!\", HttpStatus.CREATED);"},{"type":"INSERT","lineNumber":64,"content":"        return new ResponseEntity<>(\"User registered successfully!\", HttpStatus.CREATED);"}]},{"timestamp":1759834628810,"changes":[{"type":"INSERT","lineNumber":9,"content":"import com.example.assetmanagement.util.JwtTokenProvider;"},{"type":"DELETE","lineNumber":48,"oldContent":"    @PostMapping(\"/register\")"},{"type":"INSERT","lineNumber":50,"content":"    @PostMapping(\"/register\")"},{"type":"DELETE","lineNumber":51,"oldContent":"        if (loginRepository.existsByUsername(registerRequestDto.getUsername())) {"},{"type":"INSERT","lineNumber":53,"content":"        if (loginRepository.existsByUsername(registerRequestDto.getUsername())) {"},{"type":"INSERT","lineNumber":54,"content":"            return new ResponseEntity<>(\"Username is already taken!\", HttpStatus.BAD_REQUEST);"},{"type":"DELETE","lineNumber":55,"oldContent":"            return new ResponseEntity<>(\"Username is already taken!\", HttpStatus.BAD_REQUEST);"},{"type":"DELETE","lineNumber":62,"oldContent":"        return new ResponseEntity<>(\"User registered successfully!\", HttpStatus.CREATED);"},{"type":"INSERT","lineNumber":65,"content":"        return new ResponseEntity<>(\"User registered successfully!\", HttpStatus.CREATED);"}]}]},"C:/Users/naresh.b/Downloads/Archivist/assetmanagement/src/main/java/com/example/assetmanagement/config/JwtAuthFilter.java":{"filePath":"C:/Users/naresh.b/Downloads/Archivist/assetmanagement/src/main/java/com/example/assetmanagement/config/JwtAuthFilter.java","baseContent":"package com.example.assetmanagement.config;\n\nimport com.example.assetmanagement.service.LoginService;\nimport com.example.assetmanagement.util.JwtTokenProvider;\nimport jakarta.servlet.FilterChain;\nimport jakarta.servlet.ServletException;\nimport jakarta.servlet.http.HttpServletRequest;\nimport jakarta.servlet.http.HttpServletResponse;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.security.authentication.UsernamePasswordAuthenticationToken;\nimport org.springframework.security.core.context.SecurityContextHolder;\nimport org.springframework.security.core.userdetails.UserDetails;\nimport org.springframework.security.web.authentication.WebAuthenticationDetailsSource;\nimport org.springframework.stereotype.Component;\nimport org.springframework.util.StringUtils;\nimport org.springframework.web.filter.OncePerRequestFilter;\n\nimport java.io.IOException;\n\n@Component\npublic class JwtAuthenticationFilter extends OncePerRequestFilter {\n\n    @Autowired\n    private JwtTokenProvider tokenProvider;\n\n    @Autowired\n    private LoginService loginService;\n\n    @Override\n    protected void doFilterInternal(HttpServletRequest request,\n                                    HttpServletResponse response,\n                                    FilterChain filterChain) throws ServletException, IOException {\n        // Get JWT token from HTTP request\n        String token = getJWTfromRequest(request);\n\n        // Validate token\n        if (StringUtils.hasText(token) && tokenProvider.validateToken(token)) {\n            // Get username from token\n            String username = tokenProvider.getUsernameFromJWT(token);\n\n            // Load user associated with token\n            UserDetails userDetails = loginService.loadUserByUsername(username);\n\n            UsernamePasswordAuthenticationToken authenticationToken = new UsernamePasswordAuthenticationToken(\n                    userDetails, null, userDetails.getAuthorities()\n            );\n\n            authenticationToken.setDetails(new WebAuthenticationDetailsSource().buildDetails(request));\n\n            // Set spring security\n            SecurityContextHolder.getContext().setAuthentication(authenticationToken);\n        }\n\n        filterChain.doFilter(request, response);\n    }\n\n    private String getJWTfromRequest(HttpServletRequest request) {\n        String bearerToken = request.getHeader(\"Authorization\");\n\n        if (StringUtils.hasText(bearerToken) && bearerToken.startsWith(\"Bearer \")) {\n            return bearerToken.substring(7);\n        }\n\n        return null;\n    }\n}\n","baseTimestamp":1759831470231,"deltas":[{"timestamp":1759831479486,"changes":[{"type":"MODIFY","lineNumber":20,"content":"public class JwtAuthFilter extends OncePerRequestFilter {","oldContent":"public class JwtAuthenticationFilter extends OncePerRequestFilter {"}]},{"timestamp":1759831893408,"changes":[{"type":"MODIFY","lineNumber":3,"content":"import com.example.assetmanagement.util.JwtTokenUtil;","oldContent":"import com.example.assetmanagement.util.JwtTokenProvider;"},{"type":"MODIFY","lineNumber":23,"content":"    private JwtTokenUtil tokenProvider;","oldContent":"    private JwtTokenProvider tokenProvider;"}]}]},"C:/Users/naresh.b/Downloads/Archivist/assetmanagement/src/main/java/com/example/assetmanagement/config/JwtAuthenticationFilter.java":{"filePath":"C:/Users/naresh.b/Downloads/Archivist/assetmanagement/src/main/java/com/example/assetmanagement/config/JwtAuthenticationFilter.java","baseContent":"","baseTimestamp":1759831486404},"C:/Users/naresh.b/Downloads/Archivist/assetmanagement/src/main/java/com/example/assetmanagement/controller/AdminController.java":{"filePath":"C:/Users/naresh.b/Downloads/Archivist/assetmanagement/src/main/java/com/example/assetmanagement/controller/AdminController.java","baseContent":"package com.example.assetmanagement.controller;\n\nimport com.example.assetmanagement.dto.AssetDto;\nimport com.example.assetmanagement.dto.UserResponseDto;\nimport com.example.assetmanagement.entity.Asset;\nimport com.example.assetmanagement.entity.User;\nimport com.example.assetmanagement.mapper.AssetMapper;\nimport com.example.assetmanagement.mapper.UserMapper;\nimport com.example.assetmanagement.service.AssetService;\nimport com.example.assetmanagement.service.UserService;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.http.HttpStatus;\nimport org.springframework.http.ResponseEntity;\nimport org.springframework.security.access.prepost.PreAuthorize;\nimport org.springframework.web.bind.annotation.*;\n\nimport java.util.List;\nimport java.util.stream.Collectors;\n\n@RestController\n@RequestMapping(\"/api/admin\")\n@PreAuthorize(\"hasRole('ADMIN')\")\npublic class AdminController {\n\n    @Autowired\n    private UserService userService;\n\n    @Autowired\n    private AssetService assetService;\n\n    // --- User Management Endpoints ---\n\n    @GetMapping(\"/users\")\n    public List<UserResponseDto> getAllUsers() {\n        return userService.findAll().stream()\n                .map(UserMapper::toUserResponseDto)\n                .collect(Collectors.toList());\n    }\n\n    @GetMapping(\"/users/{id}\")\n    public ResponseEntity<UserResponseDto> getUserById(@PathVariable(name = \"id\") long id) {\n        User user = userService.findById(id)\n                .orElseThrow(() -> new RuntimeException(\"User not found with id: \" + id));\n        return ResponseEntity.ok(UserMapper.toUserResponseDto(user));\n    }\n\n    // --- Asset Management Endpoints ---\n\n    @PostMapping(\"/assets\")\n    public ResponseEntity<AssetDto> createAsset(@RequestBody AssetDto assetDto) {\n        Asset asset = AssetMapper.fromAssetDto(assetDto);\n        Asset newAsset = assetService.save(asset);\n        return new ResponseEntity<>(AssetMapper.toAssetDto(newAsset), HttpStatus.CREATED);\n    }\n\n    @GetMapping(\"/assets\")\n    public List<AssetDto> getAllAssets() {\n        return assetService.findAll().stream()\n                .map(AssetMapper::toAssetDto)\n                .collect(Collectors.toList());\n    }\n\n    @GetMapping(\"/assets/{id}\")\n    public ResponseEntity<AssetDto> getAssetById(@PathVariable(name = \"id\") long id) {\n        Asset asset = assetService.findById(id)\n                .orElseThrow(() -> new RuntimeException(\"Asset not found with id: \" + id));\n        return ResponseEntity.ok(AssetMapper.toAssetDto(asset));\n    }\n\n    @PutMapping(\"/assets/{id}\")\n    public ResponseEntity<AssetDto> updateAsset(@PathVariable(name = \"id\") long id, @RequestBody AssetDto assetDto) {\n        Asset existingAsset = assetService.findById(id)\n                .orElseThrow(() -> new RuntimeException(\"Asset not found with id: \" + id));\n\n        existingAsset.setName(assetDto.getName());\n        existingAsset.setDescription(assetDto.getDescription());\n        existingAsset.setCategory(assetDto.getCategory());\n        existingAsset.setPurchaseDate(assetDto.getPurchaseDate());\n        existingAsset.setPurchasePrice(assetDto.getPurchasePrice());\n        existingAsset.setStatus(assetDto.getStatus());\n\n        Asset updatedAsset = assetService.save(existingAsset);\n        return ResponseEntity.ok(AssetMapper.toAssetDto(updatedAsset));\n    }\n\n    @DeleteMapping(\"/assets/{id}\")\n    public ResponseEntity<String> deleteAsset(@PathVariable(name = \"id\") long id) {\n        // First, ensure the asset exists\n        assetService.findById(id).orElseThrow(() -> new RuntimeException(\"Asset not found with id: \" + id));\n        \n        // The deleteById method needs to be added to the AssetService\n        // assetService.deleteById(id); \n        \n        return ResponseEntity.ok(\"Asset deletion endpoint is configured. Service method needs implementation.\");\n    }\n}\n","baseTimestamp":1759831514667,"deltas":[{"timestamp":1759831722255,"changes":[{"type":"MODIFY","lineNumber":87,"content":"        // First, ensure the asset exists before attempting to delete","oldContent":"        // First, ensure the asset exists"},{"type":"DELETE","lineNumber":90,"oldContent":"        // The deleteById method needs to be added to the AssetService"},{"type":"MODIFY","lineNumber":90,"content":"        assetService.deleteById(id); ","oldContent":"        // assetService.deleteById(id); "},{"type":"MODIFY","lineNumber":92,"content":"        return ResponseEntity.ok(\"Asset deleted successfully.\");","oldContent":"        return ResponseEntity.ok(\"Asset deletion endpoint is configured. Service method needs implementation.\");"}]},{"timestamp":1759832527306,"changes":[{"type":"DELETE","lineNumber":77,"oldContent":"        existingAsset.setPurchaseDate(assetDto.getPurchaseDate());"},{"type":"DELETE","lineNumber":78,"oldContent":"        existingAsset.setPurchasePrice(assetDto.getPurchasePrice());"},{"type":"INSERT","lineNumber":89,"content":"        "},{"type":"DELETE","lineNumber":92,"oldContent":"        return ResponseEntity.ok(\"Asset deletion endpoint is configured. Service method needs implementation.\");"}]},{"timestamp":1759898611804,"changes":[{"type":"INSERT","lineNumber":10,"content":"import jakarta.validation.Valid;"},{"type":"MODIFY","lineNumber":31,"content":"    // --- Employee Management Endpoints ---","oldContent":"    // --- User Management Endpoints ---"},{"type":"DELETE","lineNumber":32,"oldContent":"    @GetMapping(\"/users\")"},{"type":"MODIFY","lineNumber":33,"content":"    @GetMapping(\"/employees\")","oldContent":"    public List<UserResponseDto> getAllUsers() {"},{"type":"INSERT","lineNumber":34,"content":"    public List<UserResponseDto> getAllEmployees() {"},{"type":"DELETE","lineNumber":39,"oldContent":"    @GetMapping(\"/users/{id}\")"},{"type":"DELETE","lineNumber":40,"oldContent":"    public ResponseEntity<UserResponseDto> getUserById(@PathVariable(name = \"id\") long id) {"},{"type":"DELETE","lineNumber":41,"oldContent":"        User user = userService.findById(id)"},{"type":"DELETE","lineNumber":42,"oldContent":"                .orElseThrow(() -> new RuntimeException(\"User not found with id: \" + id));"},{"type":"INSERT","lineNumber":40,"content":"    @GetMapping(\"/employees/{id}\")"},{"type":"INSERT","lineNumber":41,"content":"    public ResponseEntity<UserResponseDto> getEmployeeById(@PathVariable(name = \"id\") long id) {"},{"type":"INSERT","lineNumber":42,"content":"        User user = userService.getUserById(id);"},{"type":"INSERT","lineNumber":46,"content":"    @PutMapping(\"/employees/{id}\")"},{"type":"INSERT","lineNumber":47,"content":"    public ResponseEntity<UserResponseDto> updateEmployee(@PathVariable(name = \"id\") long id, @Valid @RequestBody User userDetails) {"},{"type":"INSERT","lineNumber":48,"content":"        User updatedUser = userService.updateUser(id, userDetails);"},{"type":"INSERT","lineNumber":49,"content":"        return ResponseEntity.ok(UserMapper.toUserResponseDto(updatedUser));"},{"type":"INSERT","lineNumber":50,"content":"    }"},{"type":"INSERT","lineNumber":51,"content":""},{"type":"INSERT","lineNumber":52,"content":"    @DeleteMapping(\"/employees/{id}\")"},{"type":"INSERT","lineNumber":53,"content":"    public ResponseEntity<String> deleteEmployee(@PathVariable(name = \"id\") long id) {"},{"type":"INSERT","lineNumber":54,"content":"        userService.deleteUser(id);"},{"type":"INSERT","lineNumber":55,"content":"        return ResponseEntity.ok(\"Employee deleted successfully (soft delete).\");"},{"type":"INSERT","lineNumber":56,"content":"    }"},{"type":"INSERT","lineNumber":57,"content":""},{"type":"DELETE","lineNumber":49,"oldContent":"    public ResponseEntity<AssetDto> createAsset(@RequestBody AssetDto assetDto) {"},{"type":"INSERT","lineNumber":61,"content":"    public ResponseEntity<AssetDto> createAsset(@Valid @RequestBody AssetDto assetDto) {"},{"type":"DELETE","lineNumber":65,"oldContent":"                .orElseThrow(() -> new RuntimeException(\"Asset not found with id: \" + id));"},{"type":"INSERT","lineNumber":77,"content":"                .orElseThrow(() -> new com.example.assetmanagement.exception.ResourceNotFoundException(\"Asset not found with id: \" + id));"},{"type":"DELETE","lineNumber":70,"oldContent":"    public ResponseEntity<AssetDto> updateAsset(@PathVariable(name = \"id\") long id, @RequestBody AssetDto assetDto) {"},{"type":"INSERT","lineNumber":82,"content":"    public ResponseEntity<AssetDto> updateAsset(@PathVariable(name = \"id\") long id, @Valid @RequestBody AssetDto assetDto) {"},{"type":"DELETE","lineNumber":72,"oldContent":"                .orElseThrow(() -> new RuntimeException(\"Asset not found with id: \" + id));"},{"type":"INSERT","lineNumber":84,"content":"                .orElseThrow(() -> new com.example.assetmanagement.exception.ResourceNotFoundException(\"Asset not found with id: \" + id));"},{"type":"INSERT","lineNumber":89,"content":"        existingAsset.setPurchaseDate(assetDto.getPurchaseDate());"},{"type":"INSERT","lineNumber":90,"content":"        existingAsset.setPurchasePrice(assetDto.getPurchasePrice());"},{"type":"DELETE","lineNumber":85,"oldContent":"        // First, ensure the asset exists before attempting to delete"},{"type":"DELETE","lineNumber":86,"oldContent":"        assetService.findById(id).orElseThrow(() -> new RuntimeException(\"Asset not found with id: \" + id));"},{"type":"DELETE","lineNumber":87,"oldContent":"        "},{"type":"DELETE","lineNumber":88,"oldContent":"        "},{"type":"DELETE","lineNumber":89,"oldContent":"        assetService.deleteById(id); "},{"type":"INSERT","lineNumber":99,"content":"        assetService.deleteById(id);"}]},{"timestamp":1759898755512,"changes":[{"type":"INSERT","lineNumber":5,"content":"import com.example.assetmanagement.entity.Category;"},{"type":"INSERT","lineNumber":10,"content":"import com.example.assetmanagement.service.CategoryService;"},{"type":"DELETE","lineNumber":31,"oldContent":"    // --- User Management Endpoints ---"},{"type":"INSERT","lineNumber":33,"content":"    @Autowired"},{"type":"INSERT","lineNumber":34,"content":"    private CategoryService categoryService;"},{"type":"INSERT","lineNumber":35,"content":""},{"type":"INSERT","lineNumber":37,"content":""},{"type":"DELETE","lineNumber":47,"oldContent":"    // --- Asset Management Endpoints ---"},{"type":"DELETE","lineNumber":49,"oldContent":""},{"type":"DELETE","lineNumber":51,"oldContent":"    @PostMapping(\"/assets\")"},{"type":"DELETE","lineNumber":54,"oldContent":"        Asset asset = AssetMapper.fromAssetDto(assetDto);"},{"type":"DELETE","lineNumber":56,"oldContent":"        Asset newAsset = assetService.save(asset);"},{"type":"DELETE","lineNumber":58,"oldContent":"        return new ResponseEntity<>(AssetMapper.toAssetDto(newAsset), HttpStatus.CREATED);"},{"type":"DELETE","lineNumber":60,"oldContent":"    }"},{"type":"DELETE","lineNumber":62,"oldContent":""},{"type":"DELETE","lineNumber":64,"oldContent":"    @GetMapping(\"/assets\")"},{"type":"DELETE","lineNumber":66,"oldContent":"    public List<AssetDto> getAllAssets() {"},{"type":"INSERT","lineNumber":63,"content":"    // --- Asset Management Endpoints ---"},{"type":"INSERT","lineNumber":64,"content":""},{"type":"INSERT","lineNumber":65,"content":"    @PostMapping(\"/assets\")"},{"type":"INSERT","lineNumber":66,"content":"    public ResponseEntity<AssetDto> createAsset(@Valid @RequestBody AssetDto assetDto) {"},{"type":"INSERT","lineNumber":67,"content":"        Asset asset = AssetMapper.fromAssetDto(assetDto);"},{"type":"INSERT","lineNumber":68,"content":"        Category category = categoryService.getCategoryById(assetDto.getCategoryId());"},{"type":"INSERT","lineNumber":69,"content":"        asset.setCategory(category);"},{"type":"INSERT","lineNumber":70,"content":"        Asset newAsset = assetService.save(asset);"},{"type":"INSERT","lineNumber":71,"content":"        return new ResponseEntity<>(AssetMapper.toAssetDto(newAsset), HttpStatus.CREATED);"},{"type":"INSERT","lineNumber":72,"content":"    }"},{"type":"INSERT","lineNumber":73,"content":""},{"type":"INSERT","lineNumber":74,"content":"    @GetMapping(\"/assets\")"},{"type":"INSERT","lineNumber":75,"content":"    public List<AssetDto> getAllAssets() {"},{"type":"DELETE","lineNumber":72,"oldContent":"    public ResponseEntity<AssetDto> createAsset(@Valid @RequestBody AssetDto assetDto) {"},{"type":"INSERT","lineNumber":84,"content":"                .orElseThrow(() -> new com.example.assetmanagement.exception.ResourceNotFoundException(\"Asset not found with id: \" + id));"},{"type":"INSERT","lineNumber":89,"content":"    public ResponseEntity<AssetDto> updateAsset(@PathVariable(name = \"id\") long id, @Valid @RequestBody AssetDto assetDto) {"},{"type":"INSERT","lineNumber":91,"content":"                .orElseThrow(() -> new com.example.assetmanagement.exception.ResourceNotFoundException(\"Asset not found with id: \" + id));"},{"type":"INSERT","lineNumber":93,"content":"        Category category = categoryService.getCategoryById(assetDto.getCategoryId());"},{"type":"INSERT","lineNumber":94,"content":""},{"type":"DELETE","lineNumber":85,"oldContent":"        existingAsset.setCategory(assetDto.getCategory());"},{"type":"DELETE","lineNumber":86,"oldContent":"                .orElseThrow(() -> new com.example.assetmanagement.exception.ResourceNotFoundException(\"Asset not found with id: \" + id));"},{"type":"INSERT","lineNumber":97,"content":"        existingAsset.setCategory(category);"},{"type":"INSERT","lineNumber":98,"content":"        existingAsset.setPurchaseDate(assetDto.getPurchaseDate());"},{"type":"INSERT","lineNumber":99,"content":"        existingAsset.setPurchasePrice(assetDto.getPurchasePrice());"},{"type":"DELETE","lineNumber":92,"oldContent":"    public ResponseEntity<AssetDto> updateAsset(@PathVariable(name = \"id\") long id, @Valid @RequestBody AssetDto assetDto) {"},{"type":"DELETE","lineNumber":95,"oldContent":"                .orElseThrow(() -> new com.example.assetmanagement.exception.ResourceNotFoundException(\"Asset not found with id: \" + id));"},{"type":"DELETE","lineNumber":97,"oldContent":"        existingAsset.setPurchaseDate(assetDto.getPurchaseDate());"},{"type":"DELETE","lineNumber":98,"oldContent":"        existingAsset.setPurchasePrice(assetDto.getPurchasePrice());"},{"type":"INSERT","lineNumber":108,"content":"        assetService.deleteById(id);"},{"type":"DELETE","lineNumber":103,"oldContent":"        assetService.deleteById(id);"}]},{"timestamp":1759899029646,"changes":[{"type":"DELETE","lineNumber":5,"oldContent":"import com.example.assetmanagement.entity.Category;"},{"type":"DELETE","lineNumber":11,"oldContent":"import com.example.assetmanagement.service.CategoryService;"},{"type":"DELETE","lineNumber":12,"oldContent":"import jakarta.validation.Valid;"},{"type":"DELETE","lineNumber":33,"oldContent":"    // --- Employee Management Endpoints ---"},{"type":"DELETE","lineNumber":34,"oldContent":"    @Autowired"},{"type":"DELETE","lineNumber":35,"oldContent":"    @GetMapping(\"/employees\")"},{"type":"DELETE","lineNumber":36,"oldContent":"    private CategoryService categoryService;"},{"type":"DELETE","lineNumber":37,"oldContent":"    public List<UserResponseDto> getAllEmployees() {"},{"type":"INSERT","lineNumber":30,"content":"    // --- User Management Endpoints ---"},{"type":"INSERT","lineNumber":32,"content":"    @GetMapping(\"/users\")"},{"type":"INSERT","lineNumber":33,"content":"    public List<UserResponseDto> getAllUsers() {"},{"type":"DELETE","lineNumber":41,"oldContent":""},{"type":"DELETE","lineNumber":45,"oldContent":"    @GetMapping(\"/employees/{id}\")"},{"type":"DELETE","lineNumber":46,"oldContent":"    public ResponseEntity<UserResponseDto> getEmployeeById(@PathVariable(name = \"id\") long id) {"},{"type":"DELETE","lineNumber":47,"oldContent":"        User user = userService.getUserById(id);"},{"type":"INSERT","lineNumber":39,"content":"    @GetMapping(\"/users/{id}\")"},{"type":"INSERT","lineNumber":40,"content":"    public ResponseEntity<UserResponseDto> getUserById(@PathVariable(name = \"id\") long id) {"},{"type":"INSERT","lineNumber":41,"content":"        User user = userService.findById(id)"},{"type":"INSERT","lineNumber":42,"content":"                .orElseThrow(() -> new RuntimeException(\"User not found with id: \" + id));"},{"type":"DELETE","lineNumber":51,"oldContent":"    @PutMapping(\"/employees/{id}\")"},{"type":"DELETE","lineNumber":52,"oldContent":"    public ResponseEntity<UserResponseDto> updateEmployee(@PathVariable(name = \"id\") long id, @Valid @RequestBody User userDetails) {"},{"type":"DELETE","lineNumber":53,"oldContent":"        User updatedUser = userService.updateUser(id, userDetails);"},{"type":"DELETE","lineNumber":54,"oldContent":"        return ResponseEntity.ok(UserMapper.toUserResponseDto(updatedUser));"},{"type":"DELETE","lineNumber":55,"oldContent":"    }"},{"type":"DELETE","lineNumber":56,"oldContent":""},{"type":"DELETE","lineNumber":57,"oldContent":"    @DeleteMapping(\"/employees/{id}\")"},{"type":"DELETE","lineNumber":58,"oldContent":"    public ResponseEntity<String> deleteEmployee(@PathVariable(name = \"id\") long id) {"},{"type":"DELETE","lineNumber":59,"oldContent":"        userService.deleteUser(id);"},{"type":"DELETE","lineNumber":61,"oldContent":"        return ResponseEntity.ok(\"Employee deleted successfully (soft delete).\");"},{"type":"DELETE","lineNumber":64,"oldContent":"    }"},{"type":"DELETE","lineNumber":65,"oldContent":"    public ResponseEntity<AssetDto> createAsset(@Valid @RequestBody AssetDto assetDto) {"},{"type":"INSERT","lineNumber":49,"content":"    public ResponseEntity<AssetDto> createAsset(@RequestBody AssetDto assetDto) {"},{"type":"INSERT","lineNumber":51,"content":"        Asset newAsset = assetService.save(asset);"},{"type":"INSERT","lineNumber":52,"content":"        return new ResponseEntity<>(AssetMapper.toAssetDto(newAsset), HttpStatus.CREATED);"},{"type":"INSERT","lineNumber":53,"content":"    }"},{"type":"DELETE","lineNumber":68,"oldContent":"        Category category = categoryService.getCategoryById(assetDto.getCategoryId());"},{"type":"INSERT","lineNumber":55,"content":"    @GetMapping(\"/assets\")"},{"type":"INSERT","lineNumber":56,"content":"    public List<AssetDto> getAllAssets() {"},{"type":"DELETE","lineNumber":70,"oldContent":"        asset.setCategory(category);"},{"type":"DELETE","lineNumber":72,"oldContent":"        Asset newAsset = assetService.save(asset);"},{"type":"DELETE","lineNumber":74,"oldContent":"        return new ResponseEntity<>(AssetMapper.toAssetDto(newAsset), HttpStatus.CREATED);"},{"type":"DELETE","lineNumber":76,"oldContent":"    }"},{"type":"DELETE","lineNumber":78,"oldContent":""},{"type":"DELETE","lineNumber":79,"oldContent":"    @GetMapping(\"/assets\")"},{"type":"DELETE","lineNumber":81,"oldContent":"    public List<AssetDto> getAllAssets() {"},{"type":"INSERT","lineNumber":65,"content":"                .orElseThrow(() -> new RuntimeException(\"Asset not found with id: \" + id));"},{"type":"INSERT","lineNumber":70,"content":"    public ResponseEntity<AssetDto> updateAsset(@PathVariable(name = \"id\") long id, @RequestBody AssetDto assetDto) {"},{"type":"INSERT","lineNumber":72,"content":"                .orElseThrow(() -> new RuntimeException(\"Asset not found with id: \" + id));"},{"type":"DELETE","lineNumber":91,"oldContent":"                .orElseThrow(() -> new com.example.assetmanagement.exception.ResourceNotFoundException(\"Asset not found with id: \" + id));"},{"type":"INSERT","lineNumber":76,"content":"        existingAsset.setCategory(assetDto.getCategory());"},{"type":"DELETE","lineNumber":95,"oldContent":"    public ResponseEntity<AssetDto> updateAsset(@PathVariable(name = \"id\") long id, @Valid @RequestBody AssetDto assetDto) {"},{"type":"DELETE","lineNumber":98,"oldContent":"                .orElseThrow(() -> new com.example.assetmanagement.exception.ResourceNotFoundException(\"Asset not found with id: \" + id));"},{"type":"DELETE","lineNumber":100,"oldContent":"        Category category = categoryService.getCategoryById(assetDto.getCategoryId());"},{"type":"DELETE","lineNumber":102,"oldContent":""},{"type":"DELETE","lineNumber":105,"oldContent":"        existingAsset.setCategory(category);"},{"type":"DELETE","lineNumber":106,"oldContent":"        existingAsset.setPurchaseDate(assetDto.getPurchaseDate());"},{"type":"DELETE","lineNumber":107,"oldContent":"        existingAsset.setPurchasePrice(assetDto.getPurchasePrice());"},{"type":"INSERT","lineNumber":85,"content":"        // First, ensure the asset exists before attempting to delete"},{"type":"INSERT","lineNumber":86,"content":"        assetService.findById(id).orElseThrow(() -> new RuntimeException(\"Asset not found with id: \" + id));"},{"type":"INSERT","lineNumber":87,"content":"        "},{"type":"INSERT","lineNumber":88,"content":"        assetService.deleteById(id); "},{"type":"INSERT","lineNumber":89,"content":"        "},{"type":"DELETE","lineNumber":112,"oldContent":"        assetService.deleteById(id);"}]}]},"C:/Users/naresh.b/Downloads/Archivist/assetmanagement/src/main/java/com/example/assetmanagement/service/AssetServiceImpl.java":{"filePath":"C:/Users/naresh.b/Downloads/Archivist/assetmanagement/src/main/java/com/example/assetmanagement/service/AssetServiceImpl.java","baseContent":"package com.example.assetmanagement.service;\n\nimport com.example.assetmanagement.entity.Asset;\nimport com.example.assetmanagement.entity.User;\nimport com.example.assetmanagement.repository.AssetRepository;\nimport com.example.assetmanagement.repository.UserRepository;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\nimport java.util.List;\nimport java.util.Optional;\n\n@Service\npublic class AssetServiceImpl implements AssetService {\n\n    private final AssetRepository assetRepository;\n    private final UserRepository userRepository;\n\n    @Autowired\n    public AssetServiceImpl(AssetRepository assetRepository, UserRepository userRepository) {\n        this.assetRepository = assetRepository;\n        this.userRepository = userRepository;\n    }\n\n    @Override\n    public Asset save(Asset asset) {\n        return assetRepository.save(asset);\n    }\n\n    @Override\n    public Optional<Asset> findById(Long id) {\n        return assetRepository.findById(id);\n    }\n\n    @Override\n    public List<Asset> findAll() {\n        return assetRepository.findAll();\n    }\n\n    @Override\n    public List<Asset> findByStatus(String status) {\n        return assetRepository.findByStatus(status);\n    }\n\n    @Override\n    public List<Asset> findByUserId(Long userId) {\n        User user = userRepository.findById(userId)\n                .orElseThrow(() -> new RuntimeException(\"User not found with id: \" + userId));\n        return assetRepository.findByAssignedTo(user);\n    }\n\n    @Override\n    public Asset assignAsset(Long assetId, Long userId) {\n        Asset asset = assetRepository.findById(assetId)\n                .orElseThrow(() -> new RuntimeException(\"Asset not found with id: \" + assetId));\n        User user = userRepository.findById(userId)\n                .orElseThrow(() -> new RuntimeException(\"User not found with id: \" + userId));\n        asset.setAssignedTo(user);\n        return assetRepository.save(asset);\n    }\n\n    @Override\n    public void deleteById(Long id) {\n        assetRepository.deleteById(id);\n    }\n}\n","baseTimestamp":1759831616057,"deltas":[{"timestamp":1759898519339,"changes":[{"type":"INSERT","lineNumber":4,"content":"import com.example.assetmanagement.exception.ResourceNotFoundException;"},{"type":"MODIFY","lineNumber":48,"content":"                .orElseThrow(() -> new ResourceNotFoundException(\"User not found with id: \" + userId));","oldContent":"                .orElseThrow(() -> new RuntimeException(\"User not found with id: \" + userId));"},{"type":"MODIFY","lineNumber":55,"content":"                .orElseThrow(() -> new ResourceNotFoundException(\"Asset not found with id: \" + assetId));","oldContent":"                .orElseThrow(() -> new RuntimeException(\"Asset not found with id: \" + assetId));"},{"type":"MODIFY","lineNumber":57,"content":"                .orElseThrow(() -> new ResourceNotFoundException(\"User not found with id: \" + userId));","oldContent":"                .orElseThrow(() -> new RuntimeException(\"User not found with id: \" + userId));"},{"type":"INSERT","lineNumber":64,"content":"        assetRepository.findById(id).orElseThrow(() -> new ResourceNotFoundException(\"Asset not found with id: \" + id));"}]},{"timestamp":1759899029219,"changes":[{"type":"DELETE","lineNumber":4,"oldContent":"import com.example.assetmanagement.exception.ResourceNotFoundException;"},{"type":"DELETE","lineNumber":49,"oldContent":"                .orElseThrow(() -> new ResourceNotFoundException(\"User not found with id: \" + userId));"},{"type":"INSERT","lineNumber":48,"content":"        return assetRepository.findByAssignedTo(user);"},{"type":"DELETE","lineNumber":56,"oldContent":"                .orElseThrow(() -> new ResourceNotFoundException(\"Asset not found with id: \" + assetId));"},{"type":"INSERT","lineNumber":55,"content":"        User user = userRepository.findById(userId)"},{"type":"DELETE","lineNumber":58,"oldContent":"                .orElseThrow(() -> new ResourceNotFoundException(\"User not found with id: \" + userId));"},{"type":"INSERT","lineNumber":57,"content":"        asset.setAssignedTo(user);"},{"type":"DELETE","lineNumber":65,"oldContent":"        assetRepository.findById(id).orElseThrow(() -> new ResourceNotFoundException(\"Asset not found with id: \" + id));"}]},{"timestamp":1759900405575,"changes":[{"type":"DELETE","lineNumber":18,"oldContent":"    @Autowired"},{"type":"DELETE","lineNumber":19,"oldContent":"    public AssetServiceImpl(AssetRepository assetRepository, UserRepository userRepository) {"},{"type":"DELETE","lineNumber":20,"oldContent":"        this.assetRepository = assetRepository;"},{"type":"DELETE","lineNumber":21,"oldContent":"        this.userRepository = userRepository;"},{"type":"DELETE","lineNumber":22,"oldContent":"    }"},{"type":"INSERT","lineNumber":19,"content":""},{"type":"DELETE","lineNumber":47,"oldContent":"        return assetRepository.findByAssignedTo(user);"},{"type":"INSERT","lineNumber":44,"content":"        return assetRepository.findByAssignedTo(user);"},{"type":"DELETE","lineNumber":54,"oldContent":"        User user = userRepository.findById(userId)"},{"type":"DELETE","lineNumber":56,"oldContent":"        asset.setAssignedTo(user);"},{"type":"INSERT","lineNumber":51,"content":"        User user = userRepository.findById(userId)"},{"type":"INSERT","lineNumber":53,"content":"        asset.setAssignedTo(user);"}]},{"timestamp":1759900410294,"changes":[{"type":"DELETE","lineNumber":15,"oldContent":"    private final AssetRepository assetRepository;"},{"type":"MODIFY","lineNumber":15,"content":"    private AssetRepository assetRepository;","oldContent":"    private final UserRepository userRepository;"},{"type":"INSERT","lineNumber":16,"content":"    private UserRepository userRepository;"},{"type":"DELETE","lineNumber":40,"oldContent":"        return assetRepository.findByAssignedTo(user);"},{"type":"INSERT","lineNumber":44,"content":"        return assetRepository.findByAssignedTo(user);"},{"type":"DELETE","lineNumber":47,"oldContent":"        User user = userRepository.findById(userId)"},{"type":"MODIFY","lineNumber":51,"content":"        User user = userRepository.findById(userId)","oldContent":"        asset.setAssignedTo(user);"},{"type":"INSERT","lineNumber":53,"content":"        asset.setAssignedTo(user);"}]},{"timestamp":1759900418111,"changes":[{"type":"INSERT","lineNumber":15,"content":"    @Autowired"},{"type":"DELETE","lineNumber":16,"oldContent":"    private final UserRepository userRepository;"},{"type":"INSERT","lineNumber":17,"content":"    @Autowired"},{"type":"INSERT","lineNumber":18,"content":"    private UserRepository userRepository;"},{"type":"DELETE","lineNumber":43,"oldContent":"        return assetRepository.findByAssignedTo(user);"},{"type":"INSERT","lineNumber":46,"content":"        return assetRepository.findByAssignedTo(user);"},{"type":"DELETE","lineNumber":49,"oldContent":"        asset.setAssignedTo(user);"},{"type":"MODIFY","lineNumber":51,"content":"        Asset asset = assetRepository.findById(assetId)","oldContent":"        User user = userRepository.findById(userId)"},{"type":"MODIFY","lineNumber":53,"content":"        User user = userRepository.findById(userId)","oldContent":"        asset.setAssignedTo(user);"},{"type":"INSERT","lineNumber":55,"content":"        asset.setAssignedTo(user);"}]}]},"C:/Users/naresh.b/Downloads/Archivist/assetmanagement/src/main/java/com/example/assetmanagement/controller/AssetController.java":{"filePath":"C:/Users/naresh.b/Downloads/Archivist/assetmanagement/src/main/java/com/example/assetmanagement/controller/AssetController.java","baseContent":"package com.example.assetmanagement.controller;\n\nimport com.example.assetmanagement.dto.AssetDto;\nimport com.example.assetmanagement.entity.Asset;\nimport com.example.assetmanagement.entity.Login;\nimport com.example.assetmanagement.entity.User;\nimport com.example.assetmanagement.mapper.AssetMapper;\nimport com.example.assetmanagement.service.AssetService;\nimport com.example.assetmanagement.service.UserService;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.http.ResponseEntity;\nimport org.springframework.security.access.prepost.PreAuthorize;\nimport org.springframework.security.core.annotation.AuthenticationPrincipal;\nimport org.springframework.web.bind.annotation.*;\n\nimport java.util.List;\nimport java.util.stream.Collectors;\n\n@RestController\n@RequestMapping(\"/api/assets\")\npublic class AssetController {\n\n    @Autowired\n    private AssetService assetService;\n\n    @Autowired\n    private UserService userService;\n\n    @GetMapping\n    public List<AssetDto> getAllAssets() {\n        return assetService.findAll().stream()\n                .map(AssetMapper::toAssetDto)\n                .collect(Collectors.toList());\n    }\n\n    @GetMapping(\"/{id}\")\n    public ResponseEntity<AssetDto> getAssetById(@PathVariable(name = \"id\") long id) {\n        Asset asset = assetService.findById(id)\n                .orElseThrow(() -> new RuntimeException(\"Asset not found with id: \" + id));\n        return ResponseEntity.ok(AssetMapper.toAssetDto(asset));\n    }\n\n    @GetMapping(\"/myassets\")\n    public ResponseEntity<List<AssetDto>> getMyAssets(@AuthenticationPrincipal Login login) {\n        User currentUser = login.getUser();\n        List<Asset> assets = assetService.findByUserId(currentUser.getUserId());\n        List<AssetDto> assetDtos = assets.stream()\n                .map(AssetMapper::toAssetDto)\n                .collect(Collectors.toList());\n        return ResponseEntity.ok(assetDtos);\n    }\n\n    @PutMapping(\"/{assetId}/assign/{userId}\")\n    @PreAuthorize(\"hasRole('ADMIN')\")\n    public ResponseEntity<AssetDto> assignAsset(@PathVariable Long assetId, @PathVariable Long userId) {\n        Asset assignedAsset = assetService.assignAsset(assetId, userId);\n        return ResponseEntity.ok(AssetMapper.toAssetDto(assignedAsset));\n    }\n}\n","baseTimestamp":1759831782925},"/a.dummy":{"filePath":"/a.dummy","baseContent":"JwtTokenUtil","baseTimestamp":1759831888718},"C:/Users/naresh.b/Downloads/Archivist/assetmanagement/src/main/java/com/example/assetmanagement/util/JwtTokenProvider.java":{"filePath":"C:/Users/naresh.b/Downloads/Archivist/assetmanagement/src/main/java/com/example/assetmanagement/util/JwtTokenProvider.java","baseContent":"package com.example.assetmanagement.util;\n\nimport io.jsonwebtoken.Claims;\nimport io.jsonwebtoken.Jwts;\nimport io.jsonwebtoken.SignatureAlgorithm;\nimport org.springframework.beans.factory.annotation.Value;\nimport org.springframework.security.core.Authentication;\nimport org.springframework.stereotype.Component;\n\nimport java.util.Date;\n\n@Component\npublic class JwtTokenUtil {\n\n    @Value(\"${app.jwt-secret}\")\n    private String jwtSecret;\n\n    @Value(\"${app.jwt-expiration-milliseconds}\")\n    private int jwtExpirationInMs;\n\n    public String generateToken(Authentication authentication) {\n        String username = authentication.getName();\n        Date currentDate = new Date();\n        Date expireDate = new Date(currentDate.getTime() + jwtExpirationInMs);\n\n        return Jwts.builder()\n                .setSubject(username)\n                .setIssuedAt(new Date())\n                .setExpiration(expireDate)\n                .signWith(SignatureAlgorithm.HS512, jwtSecret)\n                .compact();\n    }\n\n    public String getUsernameFromJWT(String token) {\n        Claims claims = Jwts.parser()\n                .setSigningKey(jwtSecret)\n                .parseClaimsJws(token)\n                .getBody();\n        return claims.getSubject();\n    }\n\n    public boolean validateToken(String token) {\n        try {\n            Jwts.parser().setSigningKey(jwtSecret).parseClaimsJws(token);\n            return true;\n        } catch (Exception ex) {\n            // Can be more specific with exceptions like MalformedJwtException, ExpiredJwtException, etc.\n            return false;\n        }\n    }\n}\n","baseTimestamp":1759831893285},"C:/Users/naresh.b/Downloads/Archivist/assetmanagement/src/main/java/com/example/assetmanagement/mapper/AssetMapper.java":{"filePath":"C:/Users/naresh.b/Downloads/Archivist/assetmanagement/src/main/java/com/example/assetmanagement/mapper/AssetMapper.java","baseContent":"package com.example.assetmanagement.mapper;\n\nimport com.example.assetmanagement.dto.AssetDto;\nimport com.example.assetmanagement.entity.Asset;\n\npublic class AssetMapper {\n\n    public static AssetDto toAssetDto(Asset asset) {\n        AssetDto assetDto = new AssetDto();\n        assetDto.setAssetId(asset.getAssetId());\n        assetDto.setName(asset.getName());\n        assetDto.setDescription(asset.getDescription());\n        assetDto.setCategory(asset.getCategory());\n        assetDto.setStatus(asset.getStatus());\n        if (asset.getAssignedTo() != null) {\n            assetDto.setAssignedToUserId(asset.getAssignedTo().getUserId());\n        }\n        return assetDto;\n    }\n\n    public static Asset fromAssetDto(AssetDto assetDto) {\n        Asset asset = new Asset();\n        asset.setAssetId(assetDto.getAssetId());\n        asset.setName(assetDto.getName());\n        asset.setDescription(assetDto.getDescription());\n        asset.setCategory(assetDto.getCategory());\n        asset.setPurchaseDate(assetDto.getPurchaseDate());\n        asset.setPurchasePrice(assetDto.getPurchasePrice());\n        asset.setStatus(assetDto.getStatus());\n        // Note: The service layer will be responsible for setting the 'assignedTo' user entity\n        return asset;\n    }\n}\n","baseTimestamp":1759832546704,"deltas":[{"timestamp":1759832554925,"changes":[{"type":"DELETE","lineNumber":26,"oldContent":"        asset.setPurchaseDate(assetDto.getPurchaseDate());"},{"type":"DELETE","lineNumber":27,"oldContent":"        asset.setPurchasePrice(assetDto.getPurchasePrice());"}]},{"timestamp":1759832561742,"changes":[{"type":"DELETE","lineNumber":27,"oldContent":"        // Note: The service layer will be responsible for setting the 'assignedTo' user entity"}]},{"timestamp":1759898722194,"changes":[{"type":"MODIFY","lineNumber":12,"content":"        ","oldContent":"        assetDto.setCategory(asset.getCategory());"},{"type":"INSERT","lineNumber":13,"content":"        if (asset.getCategory() != null) {"},{"type":"INSERT","lineNumber":14,"content":"            assetDto.setCategoryId(asset.getCategory().getId());"},{"type":"INSERT","lineNumber":15,"content":"            assetDto.setCategoryName(asset.getCategory().getName());"},{"type":"INSERT","lineNumber":16,"content":"        }"},{"type":"INSERT","lineNumber":17,"content":""},{"type":"INSERT","lineNumber":18,"content":"        assetDto.setPurchaseDate(asset.getPurchaseDate());"},{"type":"INSERT","lineNumber":19,"content":"        assetDto.setPurchasePrice(asset.getPurchasePrice());"},{"type":"INSERT","lineNumber":21,"content":""},{"type":"DELETE","lineNumber":25,"oldContent":"        asset.setCategory(assetDto.getCategory());"},{"type":"INSERT","lineNumber":33,"content":"        asset.setPurchaseDate(assetDto.getPurchaseDate());"},{"type":"INSERT","lineNumber":34,"content":"        asset.setPurchasePrice(assetDto.getPurchasePrice());"},{"type":"INSERT","lineNumber":36,"content":"        // Note: The service layer is now responsible for fetching and setting the Category entity using the categoryId."}]}]},"C:/Users/naresh.b/Downloads/Archivist/assetmanagement/src/main/java/com/example/assetmanagement/entity/Login.java":{"filePath":"C:/Users/naresh.b/Downloads/Archivist/assetmanagement/src/main/java/com/example/assetmanagement/entity/Login.java","baseContent":"package com.example.assetmanagement.entity;\n\nimport jakarta.persistence.*;\nimport lombok.AllArgsConstructor;\nimport lombok.Getter;\nimport lombok.NoArgsConstructor;\nimport lombok.Setter;\nimport org.springframework.security.core.GrantedAuthority;\nimport org.springframework.security.core.authority.SimpleGrantedAuthority;\nimport org.springframework.security.core.userdetails.UserDetails;\n\nimport java.util.Collection;\nimport java.util.List;\n\n@Entity\n@Table(name = \"logins\")\n@Getter\n@Setter\n@NoArgsConstructor\n@AllArgsConstructor\npublic class Login implements UserDetails {\n\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    private Long id;\n\n    @Column(unique = true, nullable = false)\n    private String username;\n\n    @Column(unique = true, nullable = false)\n    private String email;\n\n    @Column(nullable = false)\n    private String password;\n\n    @OneToOne(mappedBy = \"login\")\n    private User user;\n\n    @Override\n    public Collection<? extends GrantedAuthority> getAuthorities() {\n        return List.of(new SimpleGrantedAuthority(user.getRole().name()));\n    }\n\n    @Override\n    public String getUsername() {\n        return username;\n    }\n    \n    @Override\n    \n\n    @Override\n    public boolean isAccountNonExpired() {\n        return true;\n    }\n\n    @Override\n    public boolean isAccountNonLocked() {\n        return true;\n    }\n\n    @Override\n    public boolean isCredentialsNonExpired() {\n        return true;\n    }\n\n    @Override\n    public boolean isEnabled() {\n        return true;\n    }\n}","baseTimestamp":1759835136531,"deltas":[{"timestamp":1759835143154,"changes":[{"type":"MODIFY","lineNumber":49,"content":"    public String get","oldContent":"    "}]},{"timestamp":1759835158770,"changes":[{"type":"MODIFY","lineNumber":49,"content":"    public String getPassword(){","oldContent":"    public String get"},{"type":"INSERT","lineNumber":50,"content":"        return password;"},{"type":"INSERT","lineNumber":51,"content":"    }"}]},{"timestamp":1759835176479,"changes":[{"type":"MODIFY","lineNumber":47,"content":"","oldContent":"    "},{"type":"MODIFY","lineNumber":52,"content":"","oldContent":""}]},{"timestamp":1759898578641,"changes":[{"type":"INSERT","lineNumber":35,"content":"    @Column(name = \"is_active\", nullable = false)"},{"type":"INSERT","lineNumber":36,"content":"    private boolean isActive = true; // Add isActive field for soft delete"},{"type":"INSERT","lineNumber":37,"content":""},{"type":"INSERT","lineNumber":54,"content":"    }"},{"type":"DELETE","lineNumber":52,"oldContent":""},{"type":"DELETE","lineNumber":70,"oldContent":"        return true;"},{"type":"INSERT","lineNumber":73,"content":"        return this.isActive; // Return the status of isActive"},{"type":"INSERT","lineNumber":76,"content":""}]},{"timestamp":1759899029220,"changes":[{"type":"DELETE","lineNumber":35,"oldContent":"    @Column(name = \"is_active\", nullable = false)"},{"type":"DELETE","lineNumber":37,"oldContent":"    private boolean isActive = true; // Add isActive field for soft delete"},{"type":"DELETE","lineNumber":40,"oldContent":""},{"type":"INSERT","lineNumber":51,"content":"    }"},{"type":"DELETE","lineNumber":56,"oldContent":"    }"},{"type":"INSERT","lineNumber":70,"content":"        return true;"},{"type":"DELETE","lineNumber":75,"oldContent":"        return this.isActive; // Return the status of isActive"},{"type":"DELETE","lineNumber":76,"oldContent":""}]}]},"C:/Users/naresh.b/Downloads/Archivist/assetmanagement/src/main/java/com/example/assetmanagement/dto/RegisterRequestDto.java":{"filePath":"C:/Users/naresh.b/Downloads/Archivist/assetmanagement/src/main/java/com/example/assetmanagement/dto/RegisterRequestDto.java","baseContent":"package com.example.assetmanagement.dto;\n\nimport com.example.assetmanagement.entity.UserRole;\nimport jakarta.validation.constraints.Email;\nimport jakarta.validation.constraints.NotEmpty;\nimport jakarta.validation.constraints.NotNull;\nimport jakarta.validation.constraints.Size;\nimport lombok.Data;\n\n@Data\npublic class RegisterRequestDto {\n\n    @NotEmpty(message = \"Employee ID cannot be empty\")\n    private String employeeId;\n\n    @NotEmpty(message = \"First name cannot be empty\")\n    private String firstName;\n\n    @NotEmpty(message = \"Last name cannot be empty\")\n    private String lastName;\n\n    @NotEmpty(message = \"Username cannot be empty\")\n    private String username;\n\n    @NotEmpty(message = \"Email cannot be empty\")\n    @Email(message = \"Email should be valid\")\n    private String email;\n\n    @NotEmpty(message = \"Password cannot be empty\")\n    @Size(min = 8, message = \"Password must be at least 8 characters long\")\n    private String password;\n\n    @NotNull(message = \"Role cannot be null\")\n    private UserRole role;\n}\n","baseTimestamp":1759898441416},"C:/Users/naresh.b/Downloads/Archivist/assetmanagement/src/main/java/com/example/assetmanagement/dto/ServiceRequestDto.java":{"filePath":"C:/Users/naresh.b/Downloads/Archivist/assetmanagement/src/main/java/com/example/assetmanagement/dto/ServiceRequestDto.java","baseContent":"package com.example.assetmanagement.dto;\n\nimport jakarta.validation.constraints.NotEmpty;\nimport jakarta.validation.constraints.NotNull;\nimport lombok.Data;\nimport java.time.LocalDateTime;\n\n@Data\npublic class ServiceRequestDto {\n    private Long requestId;\n\n    @NotNull(message = \"Asset ID cannot be null\")\n    private Long assetId;\n\n    private Long requestedByUserId;\n\n    @NotEmpty(message = \"Description cannot be empty\")\n    private String description;\n\n    private String status;\n    private LocalDateTime createdAt;\n    private LocalDateTime updatedAt;\n}\n","baseTimestamp":1759898463462},"C:/Users/naresh.b/Downloads/Archivist/assetmanagement/src/main/java/com/example/assetmanagement/service/UserService.java":{"filePath":"C:/Users/naresh.b/Downloads/Archivist/assetmanagement/src/main/java/com/example/assetmanagement/service/UserService.java","baseContent":"package com.example.assetmanagement.service;\n\nimport com.example.assetmanagement.dto.UserResponseDto;\nimport com.example.assetmanagement.entity.User;\nimport java.util.List;\n\npublic interface UserService {\n    User save(User user);\n    User getUserById(Long id);\n    List<User> findAll();\n    User updateUser(Long id, User userDetails);\n    void deleteUser(Long id);\n}\n","baseTimestamp":1759898548027,"deltas":[{"timestamp":1759899029220,"changes":[{"type":"DELETE","lineNumber":2,"oldContent":"import com.example.assetmanagement.dto.UserResponseDto;"},{"type":"INSERT","lineNumber":4,"content":"import java.util.Optional;"},{"type":"MODIFY","lineNumber":8,"content":"    Optional<User> findById(Long id);","oldContent":"    User getUserById(Long id);"},{"type":"DELETE","lineNumber":10,"oldContent":"    User updateUser(Long id, User userDetails);"},{"type":"DELETE","lineNumber":11,"oldContent":"    void deleteUser(Long id);"},{"type":"DELETE","lineNumber":13,"oldContent":""}]}]},"C:/Users/naresh.b/Downloads/Archivist/assetmanagement/src/main/java/com/example/assetmanagement/entity/ServiceRequest.java":{"filePath":"C:/Users/naresh.b/Downloads/Archivist/assetmanagement/src/main/java/com/example/assetmanagement/entity/ServiceRequest.java","baseContent":"package com.example.assetmanagement.entity;\n\nimport jakarta.persistence.*;\nimport lombok.AllArgsConstructor;\nimport lombok.Getter;\nimport lombok.NoArgsConstructor;\nimport lombok.Setter;\nimport org.hibernate.annotations.CreationTimestamp;\nimport org.hibernate.annotations.UpdateTimestamp;\n\nimport java.time.LocalDateTime;\n\n@Entity\n@Table(name = \"service_requests\")\n@Getter\n@Setter\n@NoArgsConstructor\n@AllArgsConstructor\npublic class ServiceRequest {\n\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    @Column(name = \"request_id\")\n    private Long requestId;\n\n    @ManyToOne(fetch = FetchType.LAZY)\n    @JoinColumn(name = \"asset_id\", nullable = false)\n    private Asset asset;\n\n    @ManyToOne(fetch = FetchType.LAZY)\n    @JoinColumn(name = \"requested_by_user_id\", nullable = false)\n    private User requestedBy;\n\n    @Column(name = \"issue_type\", nullable = false)\n    private String issueType; // e.g., MALFUNCTION, REPAIR, RETURN\n\n    @Lob\n    @Column(nullable = false)\n    private String description;\n\n    @Column(nullable = false)\n    private String status; // e.g., OPEN, IN_PROGRESS, CLOSED\n\n    @CreationTimestamp\n    @Column(name = \"created_at\", updatable = false)\n    private LocalDateTime createdAt;\n\n    @UpdateTimestamp\n    @Column(name = \"updated_at\")\n    private LocalDateTime updatedAt;\n}\n","baseTimestamp":1759899016647,"deltas":[{"timestamp":1759899029214,"changes":[{"type":"DELETE","lineNumber":33,"oldContent":"    @Column(name = \"issue_type\", nullable = false)"},{"type":"DELETE","lineNumber":34,"oldContent":"    private String issueType; // e.g., MALFUNCTION, REPAIR, RETURN"},{"type":"DELETE","lineNumber":35,"oldContent":""},{"type":"DELETE","lineNumber":36,"oldContent":"    @Lob"},{"type":"DELETE","lineNumber":41,"oldContent":"    private String status; // e.g., OPEN, IN_PROGRESS, CLOSED"},{"type":"INSERT","lineNumber":37,"content":"    private String status; // e.g., \"OPEN\", \"IN_PROGRESS\", \"CLOSED\""},{"type":"DELETE","lineNumber":51,"oldContent":""}]}]},"C:/Users/naresh.b/Downloads/Archivist/assetmanagement/src/main/java/com/example/assetmanagement/service/ServiceRequestServiceImpl.java":{"filePath":"C:/Users/naresh.b/Downloads/Archivist/assetmanagement/src/main/java/com/example/assetmanagement/service/ServiceRequestServiceImpl.java","baseContent":"package com.example.assetmanagement.service;\n\nimport com.example.assetmanagement.dto.ServiceRequestDto;\nimport com.example.assetmanagement.entity.Asset;\nimport com.example.assetmanagement.entity.ServiceRequest;\nimport com.example.assetmanagement.entity.User;\nimport com.example.assetmanagement.repository.AssetRepository;\nimport com.example.assetmanagement.repository.ServiceRequestRepository;\nimport com.example.assetmanagement..ServiceRequestMapper;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\nimport java.util.List;\nimport java.util.stream.Collectors;\n\n@Service\npublic class ServiceRequestServiceImpl implements ServiceRequestService {\n\n    @Autowired\n    private ServiceRequestRepository serviceRequestRepository;\n\n    @Autowired\n    private AssetRepository assetRepository;\n\n    @Override\n    public ServiceRequestDto createServiceRequest(ServiceRequestDto serviceRequestDto, User user) {\n        Asset asset = assetRepository.findById(serviceRequestDto.getAssetId())\n                .orElseThrow(() -> new RuntimeException(\"Asset not found\"));\n\n        ServiceRequest serviceRequest = ServiceRequestMapper.toEntity(serviceRequestDto);\n        serviceRequest.setAsset(asset);\n        serviceRequest.setRequestedBy(user);\n        if (serviceRequest.getStatus() == null) {\n            serviceRequest.setStatus(\"OPEN\");\n        }\n\n        ServiceRequest savedServiceRequest = serviceRequestRepository.save(serviceRequest);\n        return ServiceRequestMapper.toDto(savedServiceRequest);\n    }\n\n    @Override\n    public ServiceRequestDto getServiceRequestById(Long id) {\n        ServiceRequest serviceRequest = serviceRequestRepository.findById(id)\n                .orElseThrow(() -> new RuntimeException(\"Service Request not found\"));\n        return ServiceRequestMapper.toDto(serviceRequest);\n    }\n\n    @Override\n    public List<ServiceRequestDto> getAllServiceRequests() {\n        return serviceRequestRepository.findAll().stream()\n                .map(ServiceRequestMapper::toDto)\n                .collect(Collectors.toList());\n    }\n\n    @Override\n    public List<ServiceRequestDto> getMyServiceRequests(User user) {\n        return serviceRequestRepository.findByRequestedBy(user).stream()\n                .map(ServiceRequestMapper::toDto)\n                .collect(Collectors.toList());\n    }\n\n    @Override\n    public ServiceRequestDto updateServiceRequestStatus(Long id, String status) {\n        ServiceRequest serviceRequest = serviceRequestRepository.findById(id)\n                .orElseThrow(() -> new RuntimeException(\"Service Request not found\"));\n        serviceRequest.setStatus(status);\n        ServiceRequest updatedServiceRequest = serviceRequestRepository.save(serviceRequest);\n        return ServiceRequestMapper.toDto(updatedServiceRequest);\n    }\n}\n","baseTimestamp":1759900203508,"deltas":[{"timestamp":1759900208414,"changes":[{"type":"MODIFY","lineNumber":8,"content":"import com.example.assetmanagement.mapper.ServiceRequestMapper;","oldContent":"import com.example.assetmanagement..ServiceRequestMapper;"}]},{"timestamp":1759900239593,"changes":[{"type":"MODIFY","lineNumber":44,"content":"        return ServiceRequestMapper.toServiceRequestDto(serviceRequest);","oldContent":"        return ServiceRequestMapper.toDto(serviceRequest);"}]},{"timestamp":1759900243228,"changes":[{"type":"MODIFY","lineNumber":50,"content":"                .map(ServiceRequestMapper::toServiceRequestDto)","oldContent":"                .map(ServiceRequestMapper::toDto)"}]},{"timestamp":1759900246686,"changes":[{"type":"MODIFY","lineNumber":57,"content":"                .map(ServiceRequestMapper::toServiceRequestDto)","oldContent":"                .map(ServiceRequestMapper::toDto)"}]},{"timestamp":1759900249154,"changes":[{"type":"MODIFY","lineNumber":67,"content":"        return ServiceRequestMapper.toServiceRequestDto(updatedServiceRequest);","oldContent":"        return ServiceRequestMapper.toDto(updatedServiceRequest);"}]},{"timestamp":1759900284939,"changes":[{"type":"MODIFY","lineNumber":37,"content":"        return ServiceRequestMapper.toServiceRequestDto(savedServiceRequest);","oldContent":"        return ServiceRequestMapper.toDto(savedServiceRequest);"}]},{"timestamp":1759900289985,"changes":[{"type":"MODIFY","lineNumber":29,"content":"        ServiceRequest serviceRequest = ServiceRequestMapper.fromServiceRequestDto(serviceRequestDto);","oldContent":"        ServiceRequest serviceRequest = ServiceRequestMapper.toEntity(serviceRequestDto);"}]}]},"C:/Users/naresh.b/Downloads/Archivist/assetmanagement/src/main/java/com/example/assetmanagement/service/UserServiceImpl.java":{"filePath":"C:/Users/naresh.b/Downloads/Archivist/assetmanagement/src/main/java/com/example/assetmanagement/service/UserServiceImpl.java","baseContent":"package com.example.assetmanagement.service;\n\nimport com.example.assetmanagement.entity.User;\nimport com.example.assetmanagement.repository.UserRepository;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.security.crypto.password.PasswordEncoder;\nimport org.springframework.stereotype.Service;\n\nimport java.util.List;\nimport java.util.Optional;\n\n@Service\npublic class UserServiceImpl implements UserService {\n\n    private UserRepository userRepository;\n    private PasswordEncoder passwordEncoder;\n\n    @Autowired\n    public UserServiceImpl(UserRepository userRepository, PasswordEncoder passwordEncoder) {\n        this.userRepository = userRepository;\n        this.passwordEncoder = passwordEncoder;\n    }\n\n    @Override\n    public User save(User user) {\n        if (user.getLogin() != null && user.getLogin().getPassword() != null) {\n            user.getLogin().setPassword(passwordEncoder.encode(user.getLogin().getPassword()));\n            user.getLogin().setUser(user); // Ensure bidirectional relationship is set\n        }\n        return userRepository.save(user);\n    }\n\n    @Override\n    public Optional<User> findById(Long id) {\n        return userRepository.findById(id);\n    }\n\n    @Override\n    public List<User> findAll() {\n        return userRepository.findAll();\n    }\n}","baseTimestamp":1759900348983,"deltas":[{"timestamp":1759900359369,"changes":[{"type":"INSERT","lineNumber":16,"content":"    "},{"type":"DELETE","lineNumber":17,"oldContent":"    @Autowired"},{"type":"DELETE","lineNumber":18,"oldContent":"    public UserServiceImpl(UserRepository userRepository, PasswordEncoder passwordEncoder) {"},{"type":"DELETE","lineNumber":19,"oldContent":"        this.userRepository = userRepository;"},{"type":"DELETE","lineNumber":20,"oldContent":"        this.passwordEncoder = passwordEncoder;"},{"type":"DELETE","lineNumber":21,"oldContent":"    }"},{"type":"DELETE","lineNumber":22,"oldContent":""}]},{"timestamp":1759900364110,"changes":[{"type":"INSERT","lineNumber":14,"content":"    @"}]},{"timestamp":1759900370312,"changes":[{"type":"MODIFY","lineNumber":14,"content":"    @Autowired","oldContent":"    @"},{"type":"INSERT","lineNumber":16,"content":"    @Autowired"}]},{"timestamp":1759900534461,"changes":[{"type":"MODIFY","lineNumber":19,"content":"","oldContent":"    "}]}]},"C:/Users/naresh.b/Downloads/Archivist/assetmanagement/src/main/java/com/example/assetmanagement/service/LoginServiceImpl.java":{"filePath":"C:/Users/naresh.b/Downloads/Archivist/assetmanagement/src/main/java/com/example/assetmanagement/service/LoginServiceImpl.java","baseContent":"package com.example.assetmanagement.service;\n\nimport com.example.assetmanagement.entity.Login;\nimport com.example.assetmanagement.repository.LoginRepository;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.security.core.userdetails.UserDetails;\nimport org.springframework.security.core.userdetails.UsernameNotFoundException;\nimport org.springframework.security.crypto.password.PasswordEncoder;\nimport org.springframework.stereotype.Service;\n\n@Service\npublic class LoginServiceImpl implements LoginService {\n\n    @Autowired\n    private LoginRepository loginRepository;\n    @Autowired\n    private PasswordEncoder passwordEncoder;\n    \n\n    @Override\n    public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {\n        return loginRepository.findByUsername(username)\n                .orElseThrow(() -> new UsernameNotFoundException(\"User not found with username: \" + username));\n    }\n\n    @Override\n    public Login save(Login login) {\n        login.setPassword(passwordEncoder.encode(login.getPassword()));\n        return loginRepository.save(login);\n    }\n}","baseTimestamp":1759900400458,"deltas":[{"timestamp":1759900534495,"changes":[{"type":"MODIFY","lineNumber":18,"content":"","oldContent":"    "}]}]}}}